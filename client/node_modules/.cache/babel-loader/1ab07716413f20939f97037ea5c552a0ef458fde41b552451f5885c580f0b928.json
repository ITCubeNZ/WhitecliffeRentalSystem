{"ast":null,"code":"import { LogLevel } from \"@azure/msal-browser\";\n\n/**\r\n * Configuration object to be passed to MSAL instance on creation.\r\n * For a full list of MSAL.js configuration parameters, visit:\r\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/configuration.md\r\n */\nexport const msalConfig = {\n  auth: {\n    clientId: \"cdf1c8a6-20a4-444e-bdb5-ddeb2c777f8e\",\n    authority: \"https://login.microsoftonline.com/181d82a2-39a4-4a67-ac77-14f37724e23b\",\n    redirectUri: \"http://localhost:3000/\"\n  },\n  cache: {\n    cacheLocation: \"sessionStorage\",\n    // This configures where your cache will be stored\n    storeAuthStateInCookie: true // Set this to \"true\" if you are having issues on IE11 or Edge\n  },\n\n  system: {\n    loggerOptions: {\n      loggerCallback: (level, message, containsPii) => {\n        if (containsPii) {\n          return;\n        }\n        switch (level) {\n          case LogLevel.Error:\n            console.error(message);\n            return;\n          case LogLevel.Info:\n            console.info(message);\n            return;\n          case LogLevel.Verbose:\n            console.debug(message);\n            return;\n          case LogLevel.Warning:\n            console.warn(message);\n            return;\n          default:\n            return;\n        }\n      }\n    }\n  }\n};\n\n/**\r\n * Scopes you add here will be prompted for user consent during sign-in.\r\n * By default, MSAL.js will add OIDC scopes (openid, profile, email) to any login request.\r\n * For more information about OIDC scopes, visit:\r\n * https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-permissions-and-consent#openid-connect-scopes\r\n */\nexport const loginRequest = {\n  scopes: [\"User.Read\"]\n};\n\n/**\r\n * Add here the scopes to request when obtaining an access token for MS Graph API. For more information, see:\r\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/resources-and-scopes.md\r\n */\nexport const graphConfig = {\n  graphMeEndpoint: \"Enter_the_Graph_Endpoint_Herev1.0/me\" //e.g. https://graph.microsoft.com/v1.0/me\n};","map":{"version":3,"names":["LogLevel","msalConfig","auth","clientId","authority","redirectUri","cache","cacheLocation","storeAuthStateInCookie","system","loggerOptions","loggerCallback","level","message","containsPii","Error","console","error","Info","info","Verbose","debug","Warning","warn","loginRequest","scopes","graphConfig","graphMeEndpoint"],"sources":["C:/Users/64212/WhitecliffeRentalSystem/client/src/auth/authConfig.js"],"sourcesContent":["import { LogLevel } from \"@azure/msal-browser\";\r\n\r\n/**\r\n * Configuration object to be passed to MSAL instance on creation.\r\n * For a full list of MSAL.js configuration parameters, visit:\r\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/configuration.md\r\n */\r\nexport const msalConfig = {\r\n  auth: {\r\n    clientId: \"cdf1c8a6-20a4-444e-bdb5-ddeb2c777f8e\",\r\n    authority: \"https://login.microsoftonline.com/181d82a2-39a4-4a67-ac77-14f37724e23b\",\r\n    redirectUri: \"http://localhost:3000/\",\r\n  },\r\n  cache: {\r\n    cacheLocation: \"sessionStorage\", // This configures where your cache will be stored\r\n    storeAuthStateInCookie: true, // Set this to \"true\" if you are having issues on IE11 or Edge\r\n  },\r\n  system: {\r\n    loggerOptions: {\r\n      loggerCallback: (level: any, message: any, containsPii: any) => {\r\n        if (containsPii) {\r\n          return;\r\n        }\r\n        switch (level) {\r\n          case LogLevel.Error:\r\n            console.error(message);\r\n            return;\r\n          case LogLevel.Info:\r\n            console.info(message);\r\n            return;\r\n          case LogLevel.Verbose:\r\n            console.debug(message);\r\n            return;\r\n          case LogLevel.Warning:\r\n            console.warn(message);\r\n            return;\r\n          default:\r\n            return;\r\n        }\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\n/**\r\n * Scopes you add here will be prompted for user consent during sign-in.\r\n * By default, MSAL.js will add OIDC scopes (openid, profile, email) to any login request.\r\n * For more information about OIDC scopes, visit:\r\n * https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-permissions-and-consent#openid-connect-scopes\r\n */\r\nexport const loginRequest = {\r\n  scopes: [\"User.Read\"],\r\n};\r\n\r\n/**\r\n * Add here the scopes to request when obtaining an access token for MS Graph API. For more information, see:\r\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/resources-and-scopes.md\r\n */\r\nexport const graphConfig = {\r\n  graphMeEndpoint: \"Enter_the_Graph_Endpoint_Herev1.0/me\", //e.g. https://graph.microsoft.com/v1.0/me\r\n};\r\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,qBAAqB;;AAE9C;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,UAAU,GAAG;EACxBC,IAAI,EAAE;IACJC,QAAQ,EAAE,sCAAsC;IAChDC,SAAS,EAAE,wEAAwE;IACnFC,WAAW,EAAE;EACf,CAAC;EACDC,KAAK,EAAE;IACLC,aAAa,EAAE,gBAAgB;IAAE;IACjCC,sBAAsB,EAAE,IAAI,CAAE;EAChC,CAAC;;EACDC,MAAM,EAAE;IACNC,aAAa,EAAE;MACbC,cAAc,EAAEA,CAACC,KAAU,EAAEC,OAAY,EAAEC,WAAgB,KAAK;QAC9D,IAAIA,WAAW,EAAE;UACf;QACF;QACA,QAAQF,KAAK;UACX,KAAKZ,QAAQ,CAACe,KAAK;YACjBC,OAAO,CAACC,KAAK,CAACJ,OAAO,CAAC;YACtB;UACF,KAAKb,QAAQ,CAACkB,IAAI;YAChBF,OAAO,CAACG,IAAI,CAACN,OAAO,CAAC;YACrB;UACF,KAAKb,QAAQ,CAACoB,OAAO;YACnBJ,OAAO,CAACK,KAAK,CAACR,OAAO,CAAC;YACtB;UACF,KAAKb,QAAQ,CAACsB,OAAO;YACnBN,OAAO,CAACO,IAAI,CAACV,OAAO,CAAC;YACrB;UACF;YACE;QACJ;MACF;IACF;EACF;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMW,YAAY,GAAG;EAC1BC,MAAM,EAAE,CAAC,WAAW;AACtB,CAAC;;AAED;AACA;AACA;AACA;AACA,OAAO,MAAMC,WAAW,GAAG;EACzBC,eAAe,EAAE,sCAAsC,CAAE;AAC3D,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}