{"ast":null,"code":"/*! @azure/msal-browser v3.0.2 2023-08-18 */\n'use strict';\n\nimport { StringUtils, ProtocolUtils, ClientAuthError, UrlString } from '@azure/msal-common';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\nclass BrowserProtocolUtils {\n  /**\r\n   * Extracts the BrowserStateObject from the state string.\r\n   * @param browserCrypto\r\n   * @param state\r\n   */\n  static extractBrowserRequestState(browserCrypto, state) {\n    if (StringUtils.isEmpty(state)) {\n      return null;\n    }\n    try {\n      const requestStateObj = ProtocolUtils.parseRequestState(browserCrypto, state);\n      return requestStateObj.libraryState.meta;\n    } catch (e) {\n      throw ClientAuthError.createInvalidStateError(state, e);\n    }\n  }\n  /**\r\n   * Parses properties of server response from url hash\r\n   * @param locationHash Hash from url\r\n   */\n  static parseServerResponseFromHash(locationHash) {\n    if (!locationHash) {\n      return {};\n    }\n    const hashUrlString = new UrlString(locationHash);\n    return UrlString.getDeserializedHash(hashUrlString.getHash());\n  }\n}\nexport { BrowserProtocolUtils };","map":{"version":3,"names":["BrowserProtocolUtils","extractBrowserRequestState","browserCrypto","state","StringUtils","isEmpty","requestStateObj","ProtocolUtils","parseRequestState","libraryState","meta","e","ClientAuthError","createInvalidStateError","parseServerResponseFromHash","locationHash","hashUrlString","UrlString","getDeserializedHash","getHash"],"sources":["../../src/utils/BrowserProtocolUtils.ts"],"sourcesContent":[null],"mappings":";;;;;AAAA;;;AAGG;MAiBUA,oBAAoB;EAC7B;;;;AAIG;EACH,OAAOC,0BAA0BA,CAC7BC,aAAsB,EACtBC,KAAa;IAEb,IAAIC,WAAW,CAACC,OAAO,CAACF,KAAK,CAAC,EAAE;MAC5B,OAAO,IAAI;IACd;IAED,IAAI;MACA,MAAMG,eAAe,GACjBC,aAAa,CAACC,iBAAiB,CAACN,aAAa,EAAEC,KAAK,CAAC;MACzD,OAAOG,eAAe,CAACG,YAAY,CAACC,IAA0B;IACjE,EAAC,OAAOC,CAAC,EAAE;MACR,MAAMC,eAAe,CAACC,uBAAuB,CAACV,KAAK,EAAEQ,CAAW,CAAC;IACpE;;EAGL;;;AAGG;EACH,OAAOG,2BAA2BA,CAC9BC,YAAoB;IAEpB,IAAI,CAACA,YAAY,EAAE;MACf,OAAO,EAAE;IACZ;IAED,MAAMC,aAAa,GAAG,IAAIC,SAAS,CAACF,YAAY,CAAC;IACjD,OAAOE,SAAS,CAACC,mBAAmB,CAACF,aAAa,CAACG,OAAO,EAAE,CAAC;;AAEpE"},"metadata":{},"sourceType":"module","externalDependencies":[]}