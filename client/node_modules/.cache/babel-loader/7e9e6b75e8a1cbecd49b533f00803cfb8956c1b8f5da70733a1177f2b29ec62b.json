{"ast":null,"code":"/*! @azure/msal-browser v3.0.2 2023-08-18 */\n'use strict';\n\nimport { StandardInteractionClient } from './StandardInteractionClient.mjs';\nimport { PerformanceEvents, RefreshTokenClient } from '@azure/msal-common';\nimport { ApiId } from '../utils/BrowserConstants.mjs';\nimport { BrowserAuthError } from '../error/BrowserAuthError.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nclass SilentRefreshClient extends StandardInteractionClient {\n  /**\n   * Exchanges the refresh token for new tokens\n   * @param request\n   */\n  async acquireToken(request) {\n    this.performanceClient.addQueueMeasurement(PerformanceEvents.SilentRefreshClientAcquireToken, request.correlationId);\n    this.performanceClient.setPreQueueTime(PerformanceEvents.InitializeBaseRequest, request.correlationId);\n    const silentRequest = {\n      ...request,\n      ...(await this.initializeBaseRequest(request, request.account))\n    };\n    const acquireTokenMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.SilentRefreshClientAcquireToken, silentRequest.correlationId);\n    const serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.acquireTokenSilent_silentFlow);\n    const refreshTokenClient = await this.createRefreshTokenClient(serverTelemetryManager, silentRequest.authority, silentRequest.azureCloudOptions);\n    this.logger.verbose(\"Refresh token client created\");\n    // Send request to renew token. Auth module will throw errors if token cannot be renewed.\n    this.performanceClient.setPreQueueTime(PerformanceEvents.RefreshTokenClientAcquireTokenByRefreshToken, request.correlationId);\n    return refreshTokenClient.acquireTokenByRefreshToken(silentRequest).then(result => result).then(result => {\n      acquireTokenMeasurement.end({\n        success: true,\n        fromCache: result.fromCache,\n        requestId: result.requestId\n      });\n      return result;\n    }).catch(e => {\n      e.setCorrelationId(this.correlationId);\n      serverTelemetryManager.cacheFailedRequest(e);\n      acquireTokenMeasurement.end({\n        errorCode: e.errorCode,\n        subErrorCode: e.subError,\n        success: false\n      });\n      throw e;\n    });\n  }\n  /**\n   * Currently Unsupported\n   */\n  logout() {\n    // Synchronous so we must reject\n    return Promise.reject(BrowserAuthError.createSilentLogoutUnsupportedError());\n  }\n  /**\n   * Creates a Refresh Client with the given authority, or the default authority.\n   * @param serverTelemetryManager\n   * @param authorityUrl\n   */\n  async createRefreshTokenClient(serverTelemetryManager, authorityUrl, azureCloudOptions) {\n    // Create auth module.\n    this.performanceClient.setPreQueueTime(PerformanceEvents.StandardInteractionClientGetClientConfiguration, this.correlationId);\n    const clientConfig = await this.getClientConfiguration(serverTelemetryManager, authorityUrl, azureCloudOptions);\n    return new RefreshTokenClient(clientConfig, this.performanceClient);\n  }\n}\nexport { SilentRefreshClient };","map":{"version":3,"names":["SilentRefreshClient","StandardInteractionClient","acquireToken","request","performanceClient","addQueueMeasurement","PerformanceEvents","SilentRefreshClientAcquireToken","correlationId","setPreQueueTime","InitializeBaseRequest","silentRequest","initializeBaseRequest","account","acquireTokenMeasurement","startMeasurement","serverTelemetryManager","initializeServerTelemetryManager","ApiId","acquireTokenSilent_silentFlow","refreshTokenClient","createRefreshTokenClient","authority","azureCloudOptions","logger","verbose","RefreshTokenClientAcquireTokenByRefreshToken","acquireTokenByRefreshToken","then","result","end","success","fromCache","requestId","catch","e","setCorrelationId","cacheFailedRequest","errorCode","subErrorCode","subError","logout","Promise","reject","BrowserAuthError","createSilentLogoutUnsupportedError","authorityUrl","StandardInteractionClientGetClientConfiguration","clientConfig","getClientConfiguration","RefreshTokenClient"],"sources":["../../src/interaction_client/SilentRefreshClient.ts"],"sourcesContent":[null],"mappings":";;;;;;;;AAAA;;;AAGG;AAeG,MAAOA,mBAAoB,SAAQC,yBAAyB;EAC9D;;;AAGG;EACH,MAAMC,YAAYA,CACdC,OAAgC;IAEhC,IAAI,CAACC,iBAAiB,CAACC,mBAAmB,CACtCC,iBAAiB,CAACC,+BAA+B,EACjDJ,OAAO,CAACK,aAAa,CACxB;IAED,IAAI,CAACJ,iBAAiB,CAACK,eAAe,CAClCH,iBAAiB,CAACI,qBAAqB,EACvCP,OAAO,CAACK,aAAa,CACxB;IACD,MAAMG,aAAa,GAA4B;MAC3C,GAAGR,OAAO;MACV,IAAI,MAAM,IAAI,CAACS,qBAAqB,CAACT,OAAO,EAAEA,OAAO,CAACU,OAAO,CAAC;KACjE;IACD,MAAMC,uBAAuB,GAAG,IAAI,CAACV,iBAAiB,CAACW,gBAAgB,CACnET,iBAAiB,CAACC,+BAA+B,EACjDI,aAAa,CAACH,aAAa,CAC9B;IACD,MAAMQ,sBAAsB,GAAG,IAAI,CAACC,gCAAgC,CAChEC,KAAK,CAACC,6BAA6B,CACtC;IAED,MAAMC,kBAAkB,GAAG,MAAM,IAAI,CAACC,wBAAwB,CAC1DL,sBAAsB,EACtBL,aAAa,CAACW,SAAS,EACvBX,aAAa,CAACY,iBAAiB,CAClC;IACD,IAAI,CAACC,MAAM,CAACC,OAAO,CAAC,8BAA8B,CAAC;;IAEnD,IAAI,CAACrB,iBAAiB,CAACK,eAAe,CAClCH,iBAAiB,CAACoB,4CAA4C,EAC9DvB,OAAO,CAACK,aAAa,CACxB;IACD,OAAOY,kBAAkB,CACpBO,0BAA0B,CAAChB,aAAa,CAAC,CACzCiB,IAAI,CAAEC,MAAM,IAAKA,MAA8B,CAAC,CAChDD,IAAI,CAAEC,MAA4B,IAAI;MACnCf,uBAAuB,CAACgB,GAAG,CAAC;QACxBC,OAAO,EAAE,IAAI;QACbC,SAAS,EAAEH,MAAM,CAACG,SAAS;QAC3BC,SAAS,EAAEJ,MAAM,CAACI;MACrB,EAAC;MAEF,OAAOJ,MAAM;IACjB,CAAC,CAAC,CACDK,KAAK,CAAEC,CAAY,IAAI;MACnBA,CAAe,CAACC,gBAAgB,CAAC,IAAI,CAAC5B,aAAa,CAAC;MACrDQ,sBAAsB,CAACqB,kBAAkB,CAACF,CAAC,CAAC;MAC5CrB,uBAAuB,CAACgB,GAAG,CAAC;QACxBQ,SAAS,EAAEH,CAAC,CAACG,SAAS;QACtBC,YAAY,EAAEJ,CAAC,CAACK,QAAQ;QACxBT,OAAO,EAAE;MACZ,EAAC;MACF,MAAMI,CAAC;IACX,CAAC,CAAC;;EAGV;;AAEG;EACHM,MAAMA,CAAA;;IAEF,OAAOC,OAAO,CAACC,MAAM,CACjBC,gBAAgB,CAACC,kCAAkC,EAAE,CACxD;;EAGL;;;;AAIG;EACO,MAAMxB,wBAAwBA,CACpCL,sBAA8C,EAC9C8B,YAAqB,EACrBvB,iBAAqC;;IAGrC,IAAI,CAACnB,iBAAiB,CAACK,eAAe,CAClCH,iBAAiB,CAACyC,+CAA+C,EACjE,IAAI,CAACvC,aAAa,CACrB;IACD,MAAMwC,YAAY,GAAG,MAAM,IAAI,CAACC,sBAAsB,CAClDjC,sBAAsB,EACtB8B,YAAY,EACZvB,iBAAiB,CACpB;IACD,OAAO,IAAI2B,kBAAkB,CAACF,YAAY,EAAE,IAAI,CAAC5C,iBAAiB,CAAC;;AAE1E"},"metadata":{},"sourceType":"module","externalDependencies":[]}