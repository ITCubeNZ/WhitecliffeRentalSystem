{"ast":null,"code":"/*! @azure/msal-browser v3.0.2 2023-08-18 */\n'use strict';\n\nimport { TeamsAppOperatingContext } from '../operatingcontext/TeamsAppOperatingContext.mjs';\nimport { StandardOperatingContext } from '../operatingcontext/StandardOperatingContext.mjs';\nimport { Logger } from '@azure/msal-common';\nimport { name, version } from '../packageMetadata.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\nclass ControllerFactory {\n  constructor(config) {\n    this.config = config;\n    const loggerOptions = {\n      loggerCallback: undefined,\n      piiLoggingEnabled: false,\n      logLevel: undefined,\n      correlationId: undefined\n    };\n    this.logger = new Logger(loggerOptions, name, version);\n  }\n  async createController() {\n    const standard = new StandardOperatingContext(this.config);\n    const metaOS = new TeamsAppOperatingContext(this.config);\n    const operatingContexts = [standard.initialize(), metaOS.initialize()];\n    return Promise.all(operatingContexts).then(async () => {\n      if (metaOS.isAvailable()) {\n        /*\r\n         * pull down metaos module\r\n         * create associated controller\r\n         */\n        // return await StandardController.createController(standard);\n        const controller = await import('./StandardController.mjs');\n        return await controller.StandardController.createController(standard);\n      } else if (standard.isAvailable()) {\n        const controller = await import('./StandardController.mjs');\n        return await controller.StandardController.createController(standard);\n      }\n      throw new Error(\"No controller found.\");\n    });\n  }\n}\nexport { ControllerFactory };","map":{"version":3,"names":["ControllerFactory","constructor","config","loggerOptions","loggerCallback","undefined","piiLoggingEnabled","logLevel","correlationId","logger","Logger","name","version","createController","standard","StandardOperatingContext","metaOS","TeamsAppOperatingContext","operatingContexts","initialize","Promise","all","then","isAvailable","controller","StandardController","Error"],"sources":["../../src/controllers/ControllerFactory.ts"],"sourcesContent":[null],"mappings":";;;;;;;;AAAA;;;AAGG;MASUA,iBAAiB;EAI1BC,YAAYC,MAAqB;IAC7B,IAAI,CAACA,MAAM,GAAGA,MAAM;IACpB,MAAMC,aAAa,GAAG;MAClBC,cAAc,EAAEC,SAAS;MACzBC,iBAAiB,EAAE,KAAK;MACxBC,QAAQ,EAAEF,SAAS;MACnBG,aAAa,EAAEH;KAClB;IACD,IAAI,CAACI,MAAM,GAAG,IAAIC,MAAM,CAACP,aAAa,EAAEQ,IAAI,EAAEC,OAAO,CAAC;;EAG1D,MAAMC,gBAAgBA,CAAA;IAClB,MAAMC,QAAQ,GAAG,IAAIC,wBAAwB,CAAC,IAAI,CAACb,MAAM,CAAC;IAC1D,MAAMc,MAAM,GAAG,IAAIC,wBAAwB,CAAC,IAAI,CAACf,MAAM,CAAC;IAExD,MAAMgB,iBAAiB,GAAG,CAACJ,QAAQ,CAACK,UAAU,EAAE,EAAEH,MAAM,CAACG,UAAU,EAAE,CAAC;IAEtE,OAAOC,OAAO,CAACC,GAAG,CAACH,iBAAiB,CAAC,CAACI,IAAI,CAAC,YAAW;MAClD,IAAIN,MAAM,CAACO,WAAW,EAAE,EAAE;QACtB;;;AAGG;;QAEH,MAAMC,UAAU,GAAG,MAAM,OAAO,0BAAsB,CAAC;QACvD,OAAO,MAAMA,UAAU,CAACC,kBAAkB,CAACZ,gBAAgB,CACvDC,QAAQ,CACX;MACJ,OAAM,IAAIA,QAAQ,CAACS,WAAW,EAAE,EAAE;QAC/B,MAAMC,UAAU,GAAG,MAAM,OAAO,0BAAsB,CAAC;QACvD,OAAO,MAAMA,UAAU,CAACC,kBAAkB,CAACZ,gBAAgB,CACvDC,QAAQ,CACX;MACJ;MAED,MAAM,IAAIY,KAAK,CAAC,sBAAsB,CAAC;IAC3C,CAAC,CAAC;;AAET"},"metadata":{},"sourceType":"module","externalDependencies":[]}