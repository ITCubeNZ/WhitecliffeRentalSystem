{"ast":null,"code":"/*! @azure/msal-common v14.0.2 2023-08-18 */\n'use strict';\n\nimport { Authority } from './Authority.mjs';\nimport { ClientConfigurationError } from '../error/ClientConfigurationError.mjs';\nimport { StringUtils } from '../utils/StringUtils.mjs';\nimport { ClientAuthError } from '../error/ClientAuthError.mjs';\nimport { PerformanceEvents } from '../telemetry/performance/PerformanceEvent.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/** @internal */\nclass AuthorityFactory {\n  /**\n   * Create an authority object of the correct type based on the url\n   * Performs basic authority validation - checks to see if the authority is of a valid type (i.e. aad, b2c, adfs)\n   *\n   * Also performs endpoint discovery.\n   *\n   * @param authorityUri\n   * @param networkClient\n   * @param protocolMode\n   */\n  static async createDiscoveredInstance(authorityUri, networkClient, cacheManager, authorityOptions, logger, performanceClient, correlationId) {\n    performanceClient?.addQueueMeasurement(PerformanceEvents.AuthorityFactoryCreateDiscoveredInstance, correlationId);\n    const authorityUriFinal = Authority.transformCIAMAuthority(authorityUri);\n    // Initialize authority and perform discovery endpoint check.\n    const acquireTokenAuthority = AuthorityFactory.createInstance(authorityUriFinal, networkClient, cacheManager, authorityOptions, logger, performanceClient, correlationId);\n    try {\n      performanceClient?.setPreQueueTime(PerformanceEvents.AuthorityResolveEndpointsAsync, correlationId);\n      await acquireTokenAuthority.resolveEndpointsAsync();\n      return acquireTokenAuthority;\n    } catch (e) {\n      throw ClientAuthError.createEndpointDiscoveryIncompleteError(e);\n    }\n  }\n  /**\n   * Create an authority object of the correct type based on the url\n   * Performs basic authority validation - checks to see if the authority is of a valid type (i.e. aad, b2c, adfs)\n   *\n   * Does not perform endpoint discovery.\n   *\n   * @param authorityUrl\n   * @param networkInterface\n   * @param protocolMode\n   */\n  static createInstance(authorityUrl, networkInterface, cacheManager, authorityOptions, logger, performanceClient, correlationId) {\n    // Throw error if authority url is empty\n    if (StringUtils.isEmpty(authorityUrl)) {\n      throw ClientConfigurationError.createUrlEmptyError();\n    }\n    return new Authority(authorityUrl, networkInterface, cacheManager, authorityOptions, logger, performanceClient, correlationId);\n  }\n}\nexport { AuthorityFactory };","map":{"version":3,"names":["AuthorityFactory","createDiscoveredInstance","authorityUri","networkClient","cacheManager","authorityOptions","logger","performanceClient","correlationId","addQueueMeasurement","PerformanceEvents","AuthorityFactoryCreateDiscoveredInstance","authorityUriFinal","Authority","transformCIAMAuthority","acquireTokenAuthority","createInstance","setPreQueueTime","AuthorityResolveEndpointsAsync","resolveEndpointsAsync","e","ClientAuthError","createEndpointDiscoveryIncompleteError","authorityUrl","networkInterface","StringUtils","isEmpty","ClientConfigurationError","createUrlEmptyError"],"sources":["../../src/authority/AuthorityFactory.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;AAAA;;;AAGG;AAaH;MACaA,gBAAgB;EACzB;;;;;;;;;AASG;EACH,aAAaC,wBAAwBA,CACjCC,YAAoB,EACpBC,aAA6B,EAC7BC,YAA2B,EAC3BC,gBAAkC,EAClCC,MAAc,EACdC,iBAAsC,EACtCC,aAAsB;IAEtBD,iBAAiB,EAAEE,mBAAmB,CAClCC,iBAAiB,CAACC,wCAAwC,EAC1DH,aAAa,CAChB;IAED,MAAMI,iBAAiB,GACnBC,SAAS,CAACC,sBAAsB,CAACZ,YAAY,CAAC;;IAGlD,MAAMa,qBAAqB,GACvBf,gBAAgB,CAACgB,cAAc,CAC3BJ,iBAAiB,EACjBT,aAAa,EACbC,YAAY,EACZC,gBAAgB,EAChBC,MAAM,EACNC,iBAAiB,EACjBC,aAAa,CAChB;IAEL,IAAI;MACAD,iBAAiB,EAAEU,eAAe,CAC9BP,iBAAiB,CAACQ,8BAA8B,EAChDV,aAAa,CAChB;MAED,MAAMO,qBAAqB,CAACI,qBAAqB,EAAE;MACnD,OAAOJ,qBAAqB;IAC/B,EAAC,OAAOK,CAAC,EAAE;MACR,MAAMC,eAAe,CAACC,sCAAsC,CACxDF,CAAW,CACd;IACJ;;EAGL;;;;;;;;;AASG;EACH,OAAOJ,cAAcA,CACjBO,YAAoB,EACpBC,gBAAgC,EAChCpB,YAA2B,EAC3BC,gBAAkC,EAClCC,MAAc,EACdC,iBAAsC,EACtCC,aAAsB;;IAGtB,IAAIiB,WAAW,CAACC,OAAO,CAACH,YAAY,CAAC,EAAE;MACnC,MAAMI,wBAAwB,CAACC,mBAAmB,EAAE;IACvD;IAED,OAAO,IAAIf,SAAS,CAChBU,YAAY,EACZC,gBAAgB,EAChBpB,YAAY,EACZC,gBAAgB,EAChBC,MAAM,EACNC,iBAAiB,EACjBC,aAAa,CAChB;;AAER"},"metadata":{},"sourceType":"module","externalDependencies":[]}