{"ast":null,"code":"/*! @azure/msal-common v14.0.2 2023-08-18 */\n'use strict';\n\nimport { ClientConfigurationError } from '../error/ClientConfigurationError.mjs';\nimport { HeaderNames, Constants } from '../utils/Constants.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n/**\r\n * This is a helper class that parses supported HTTP response authentication headers to extract and return\r\n * header challenge values that can be used outside the basic authorization flows.\r\n */\nclass AuthenticationHeaderParser {\n  constructor(headers) {\n    this.headers = headers;\n  }\n  /**\r\n   * This method parses the SHR nonce value out of either the Authentication-Info or WWW-Authenticate authentication headers.\r\n   * @returns\r\n   */\n  getShrNonce() {\n    // Attempt to parse nonce from Authentiacation-Info\n    const authenticationInfo = this.headers[HeaderNames.AuthenticationInfo];\n    if (authenticationInfo) {\n      const authenticationInfoChallenges = this.parseChallenges(authenticationInfo);\n      if (authenticationInfoChallenges.nextnonce) {\n        return authenticationInfoChallenges.nextnonce;\n      }\n      throw ClientConfigurationError.createInvalidAuthenticationHeaderError(HeaderNames.AuthenticationInfo, \"nextnonce challenge is missing.\");\n    }\n    // Attempt to parse nonce from WWW-Authenticate\n    const wwwAuthenticate = this.headers[HeaderNames.WWWAuthenticate];\n    if (wwwAuthenticate) {\n      const wwwAuthenticateChallenges = this.parseChallenges(wwwAuthenticate);\n      if (wwwAuthenticateChallenges.nonce) {\n        return wwwAuthenticateChallenges.nonce;\n      }\n      throw ClientConfigurationError.createInvalidAuthenticationHeaderError(HeaderNames.WWWAuthenticate, \"nonce challenge is missing.\");\n    }\n    // If neither header is present, throw missing headers error\n    throw ClientConfigurationError.createMissingNonceAuthenticationHeadersError();\n  }\n  /**\r\n   * Parses an HTTP header's challenge set into a key/value map.\r\n   * @param header\r\n   * @returns\r\n   */\n  parseChallenges(header) {\n    const schemeSeparator = header.indexOf(\" \");\n    const challenges = header.substr(schemeSeparator + 1).split(\",\");\n    const challengeMap = {};\n    challenges.forEach(challenge => {\n      const [key, value] = challenge.split(\"=\");\n      // Remove escaped quotation marks (', \") from challenge string to keep only the challenge value\n      challengeMap[key] = unescape(value.replace(/['\"]+/g, Constants.EMPTY_STRING));\n    });\n    return challengeMap;\n  }\n}\nexport { AuthenticationHeaderParser };","map":{"version":3,"names":["AuthenticationHeaderParser","constructor","headers","getShrNonce","authenticationInfo","HeaderNames","AuthenticationInfo","authenticationInfoChallenges","parseChallenges","nextnonce","ClientConfigurationError","createInvalidAuthenticationHeaderError","wwwAuthenticate","WWWAuthenticate","wwwAuthenticateChallenges","nonce","createMissingNonceAuthenticationHeadersError","header","schemeSeparator","indexOf","challenges","substr","split","challengeMap","forEach","challenge","key","value","unescape","replace","Constants","EMPTY_STRING"],"sources":["../../src/request/AuthenticationHeaderParser.ts"],"sourcesContent":[null],"mappings":";;;;;;AAAA;;;AAGG;AAaH;;;AAGG;MACUA,0BAA0B;EAGnCC,YAAYC,OAA+B;IACvC,IAAI,CAACA,OAAO,GAAGA,OAAO;;EAG1B;;;AAGG;EACHC,WAAWA,CAAA;;IAEP,MAAMC,kBAAkB,GAAG,IAAI,CAACF,OAAO,CAACG,WAAW,CAACC,kBAAkB,CAAC;IACvE,IAAIF,kBAAkB,EAAE;MACpB,MAAMG,4BAA4B,GAC9B,IAAI,CAACC,eAAe,CAChBJ,kBAAkB,CACrB;MACL,IAAIG,4BAA4B,CAACE,SAAS,EAAE;QACxC,OAAOF,4BAA4B,CAACE,SAAS;MAChD;MACD,MAAMC,wBAAwB,CAACC,sCAAsC,CACjEN,WAAW,CAACC,kBAAkB,EAC9B,iCAAiC,CACpC;IACJ;;IAGD,MAAMM,eAAe,GAAG,IAAI,CAACV,OAAO,CAACG,WAAW,CAACQ,eAAe,CAAC;IACjE,IAAID,eAAe,EAAE;MACjB,MAAME,yBAAyB,GAC3B,IAAI,CAACN,eAAe,CAChBI,eAAe,CAClB;MACL,IAAIE,yBAAyB,CAACC,KAAK,EAAE;QACjC,OAAOD,yBAAyB,CAACC,KAAK;MACzC;MACD,MAAML,wBAAwB,CAACC,sCAAsC,CACjEN,WAAW,CAACQ,eAAe,EAC3B,6BAA6B,CAChC;IACJ;;IAGD,MAAMH,wBAAwB,CAACM,4CAA4C,EAAE;;EAGjF;;;;AAIG;EACKR,eAAeA,CAAIS,MAAc;IACrC,MAAMC,eAAe,GAAGD,MAAM,CAACE,OAAO,CAAC,GAAG,CAAC;IAC3C,MAAMC,UAAU,GAAGH,MAAM,CAACI,MAAM,CAACH,eAAe,GAAG,CAAC,CAAC,CAACI,KAAK,CAAC,GAAG,CAAC;IAChE,MAAMC,YAAY,GAAG,EAAO;IAE5BH,UAAU,CAACI,OAAO,CAAEC,SAAiB,IAAI;MACrC,MAAM,CAACC,GAAG,EAAEC,KAAK,CAAC,GAAGF,SAAS,CAACH,KAAK,CAAC,GAAG,CAAC;;MAEzCC,YAAY,CAACG,GAAG,CAAC,GAAGE,QAAQ,CACxBD,KAAK,CAACE,OAAO,CAAC,QAAQ,EAAEC,SAAS,CAACC,YAAY,CAAC,CAClD;IACL,CAAC,CAAC;IAEF,OAAOR,YAAY;;AAE1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}