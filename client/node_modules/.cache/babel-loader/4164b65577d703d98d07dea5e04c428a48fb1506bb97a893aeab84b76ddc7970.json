{"ast":null,"code":"/*! @azure/msal-browser v3.0.2 2023-08-18 */\n'use strict';\n\nimport { StandardInteractionClient } from './StandardInteractionClient.mjs';\nimport { PerformanceEvents, AuthError, SilentFlowClient } from '@azure/msal-common';\nimport { ApiId } from '../utils/BrowserConstants.mjs';\nimport { BrowserAuthError, BrowserAuthErrorMessage } from '../error/BrowserAuthError.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\nclass SilentCacheClient extends StandardInteractionClient {\n  /**\r\n   * Returns unexpired tokens from the cache, if available\r\n   * @param silentRequest\r\n   */\n  async acquireToken(silentRequest) {\n    const acquireTokenMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.SilentCacheClientAcquireToken, silentRequest.correlationId);\n    // Telemetry manager only used to increment cacheHits here\n    const serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.acquireTokenSilent_silentFlow);\n    const silentAuthClient = await this.createSilentFlowClient(serverTelemetryManager, silentRequest.authority, silentRequest.azureCloudOptions);\n    this.logger.verbose(\"Silent auth client created\");\n    try {\n      const cachedToken = await silentAuthClient.acquireCachedToken(silentRequest);\n      acquireTokenMeasurement.end({\n        success: true,\n        fromCache: true\n      });\n      return cachedToken;\n    } catch (error) {\n      if (error instanceof BrowserAuthError && error.errorCode === BrowserAuthErrorMessage.signingKeyNotFoundInStorage.code) {\n        this.logger.verbose(\"Signing keypair for bound access token not found. Refreshing bound access token and generating a new crypto keypair.\");\n      }\n      acquireTokenMeasurement.end({\n        errorCode: error instanceof AuthError && error.errorCode || undefined,\n        subErrorCode: error instanceof AuthError && error.subError || undefined,\n        success: false\n      });\n      throw error;\n    }\n  }\n  /**\r\n   * Currently Unsupported\r\n   */\n  logout() {\n    // Synchronous so we must reject\n    return Promise.reject(BrowserAuthError.createSilentLogoutUnsupportedError());\n  }\n  /**\r\n   * Creates an Silent Flow Client with the given authority, or the default authority.\r\n   * @param serverTelemetryManager\r\n   * @param authorityUrl\r\n   */\n  async createSilentFlowClient(serverTelemetryManager, authorityUrl, azureCloudOptions) {\n    // Create auth module.\n    this.performanceClient.setPreQueueTime(PerformanceEvents.StandardInteractionClientGetClientConfiguration, this.correlationId);\n    const clientConfig = await this.getClientConfiguration(serverTelemetryManager, authorityUrl, azureCloudOptions);\n    return new SilentFlowClient(clientConfig, this.performanceClient);\n  }\n  async initializeSilentRequest(request, account) {\n    this.performanceClient.addQueueMeasurement(PerformanceEvents.InitializeSilentRequest, this.correlationId);\n    this.performanceClient.setPreQueueTime(PerformanceEvents.InitializeBaseRequest, this.correlationId);\n    return {\n      ...request,\n      ...(await this.initializeBaseRequest(request, account)),\n      account: account,\n      forceRefresh: request.forceRefresh || false\n    };\n  }\n}\nexport { SilentCacheClient };","map":{"version":3,"names":["SilentCacheClient","StandardInteractionClient","acquireToken","silentRequest","acquireTokenMeasurement","performanceClient","startMeasurement","PerformanceEvents","SilentCacheClientAcquireToken","correlationId","serverTelemetryManager","initializeServerTelemetryManager","ApiId","acquireTokenSilent_silentFlow","silentAuthClient","createSilentFlowClient","authority","azureCloudOptions","logger","verbose","cachedToken","acquireCachedToken","end","success","fromCache","error","BrowserAuthError","errorCode","BrowserAuthErrorMessage","signingKeyNotFoundInStorage","code","AuthError","undefined","subErrorCode","subError","logout","Promise","reject","createSilentLogoutUnsupportedError","authorityUrl","setPreQueueTime","StandardInteractionClientGetClientConfiguration","clientConfig","getClientConfiguration","SilentFlowClient","initializeSilentRequest","request","account","addQueueMeasurement","InitializeSilentRequest","InitializeBaseRequest","initializeBaseRequest","forceRefresh"],"sources":["../../src/interaction_client/SilentCacheClient.ts"],"sourcesContent":[null],"mappings":";;;;;;;;AAAA;;;AAGG;AAoBG,MAAOA,iBAAkB,SAAQC,yBAAyB;EAC5D;;;AAGG;EACH,MAAMC,YAAYA,CACdC,aAAsC;IAEtC,MAAMC,uBAAuB,GAAG,IAAI,CAACC,iBAAiB,CAACC,gBAAgB,CACnEC,iBAAiB,CAACC,6BAA6B,EAC/CL,aAAa,CAACM,aAAa,CAC9B;;IAED,MAAMC,sBAAsB,GAAG,IAAI,CAACC,gCAAgC,CAChEC,KAAK,CAACC,6BAA6B,CACtC;IAED,MAAMC,gBAAgB,GAAG,MAAM,IAAI,CAACC,sBAAsB,CACtDL,sBAAsB,EACtBP,aAAa,CAACa,SAAS,EACvBb,aAAa,CAACc,iBAAiB,CAClC;IACD,IAAI,CAACC,MAAM,CAACC,OAAO,CAAC,4BAA4B,CAAC;IAEjD,IAAI;MACA,MAAMC,WAAW,GAAI,MAAMN,gBAAgB,CAACO,kBAAkB,CAC1DlB,aAAa,CACS;MAE1BC,uBAAuB,CAACkB,GAAG,CAAC;QACxBC,OAAO,EAAE,IAAI;QACbC,SAAS,EAAE;MACd,EAAC;MACF,OAAOJ,WAAW;IACrB,EAAC,OAAOK,KAAK,EAAE;MACZ,IACIA,KAAK,YAAYC,gBAAgB,IACjCD,KAAK,CAACE,SAAS,KACXC,uBAAuB,CAACC,2BAA2B,CAACC,IAAI,EAC9D;QACE,IAAI,CAACZ,MAAM,CAACC,OAAO,CACf,sHAAsH,CACzH;MACJ;MACDf,uBAAuB,CAACkB,GAAG,CAAC;QACxBK,SAAS,EACJF,KAAK,YAAYM,SAAS,IAAIN,KAAK,CAACE,SAAS,IAC9CK,SAAS;QACbC,YAAY,EACPR,KAAK,YAAYM,SAAS,IAAIN,KAAK,CAACS,QAAQ,IAAKF,SAAS;QAC/DT,OAAO,EAAE;MACZ,EAAC;MACF,MAAME,KAAK;IACd;;EAGL;;AAEG;EACHU,MAAMA,CAAA;;IAEF,OAAOC,OAAO,CAACC,MAAM,CACjBX,gBAAgB,CAACY,kCAAkC,EAAE,CACxD;;EAGL;;;;AAIG;EACO,MAAMvB,sBAAsBA,CAClCL,sBAA8C,EAC9C6B,YAAqB,EACrBtB,iBAAqC;;IAGrC,IAAI,CAACZ,iBAAiB,CAACmC,eAAe,CAClCjC,iBAAiB,CAACkC,+CAA+C,EACjE,IAAI,CAAChC,aAAa,CACrB;IACD,MAAMiC,YAAY,GAAG,MAAM,IAAI,CAACC,sBAAsB,CAClDjC,sBAAsB,EACtB6B,YAAY,EACZtB,iBAAiB,CACpB;IACD,OAAO,IAAI2B,gBAAgB,CAACF,YAAY,EAAE,IAAI,CAACrC,iBAAiB,CAAC;;EAGrE,MAAMwC,uBAAuBA,CACzBC,OAAsB,EACtBC,OAAoB;IAEpB,IAAI,CAAC1C,iBAAiB,CAAC2C,mBAAmB,CACtCzC,iBAAiB,CAAC0C,uBAAuB,EACzC,IAAI,CAACxC,aAAa,CACrB;IAED,IAAI,CAACJ,iBAAiB,CAACmC,eAAe,CAClCjC,iBAAiB,CAAC2C,qBAAqB,EACvC,IAAI,CAACzC,aAAa,CACrB;IACD,OAAO;MACH,GAAGqC,OAAO;MACV,IAAI,MAAM,IAAI,CAACK,qBAAqB,CAACL,OAAO,EAAEC,OAAO,CAAC,CAAC;MACvDA,OAAO,EAAEA,OAAO;MAChBK,YAAY,EAAEN,OAAO,CAACM,YAAY,IAAI;KACzC;;AAER"},"metadata":{},"sourceType":"module","externalDependencies":[]}