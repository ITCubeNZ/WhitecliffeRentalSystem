{"ast":null,"code":"/*! @azure/msal-browser v3.0.2 2023-08-18 */\n'use strict';\n\nimport { AuthError, InteractionRequiredAuthError } from '@azure/msal-common';\nimport { BrowserAuthError } from './BrowserAuthError.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nconst INVALID_METHOD_ERROR = -2147186943;\nconst NativeStatusCode = {\n  USER_INTERACTION_REQUIRED: \"USER_INTERACTION_REQUIRED\",\n  USER_CANCEL: \"USER_CANCEL\",\n  NO_NETWORK: \"NO_NETWORK\",\n  TRANSIENT_ERROR: \"TRANSIENT_ERROR\",\n  PERSISTENT_ERROR: \"PERSISTENT_ERROR\",\n  DISABLED: \"DISABLED\",\n  ACCOUNT_UNAVAILABLE: \"ACCOUNT_UNAVAILABLE\"\n};\nconst NativeAuthErrorMessage = {\n  extensionError: {\n    code: \"ContentError\"\n  },\n  userSwitch: {\n    code: \"user_switch\",\n    desc: \"User attempted to switch accounts in the native broker, which is not allowed. All new accounts must sign-in through the standard web flow first, please try again.\"\n  },\n  tokensNotFoundInCache: {\n    code: \"tokens_not_found_in_internal_memory_cache\",\n    desc: \"Tokens not cached in MSAL JS internal memory, please make the WAM request\"\n  }\n};\nclass NativeAuthError extends AuthError {\n  constructor(errorCode, description, ext) {\n    super(errorCode, description);\n    Object.setPrototypeOf(this, NativeAuthError.prototype);\n    this.name = \"NativeAuthError\";\n    this.ext = ext;\n  }\n  /**\n   * These errors should result in a fallback to the 'standard' browser based auth flow.\n   */\n  isFatal() {\n    if (this.ext && this.ext.status && (this.ext.status === NativeStatusCode.PERSISTENT_ERROR || this.ext.status === NativeStatusCode.DISABLED)) {\n      return true;\n    }\n    if (this.ext && this.ext.error && this.ext.error === INVALID_METHOD_ERROR) {\n      return true;\n    }\n    switch (this.errorCode) {\n      case NativeAuthErrorMessage.extensionError.code:\n        return true;\n      default:\n        return false;\n    }\n  }\n  /**\n   * Create the appropriate error object based on the WAM status code.\n   * @param code\n   * @param description\n   * @param ext\n   * @returns\n   */\n  static createError(code, description, ext) {\n    if (ext && ext.status) {\n      switch (ext.status) {\n        case NativeStatusCode.ACCOUNT_UNAVAILABLE:\n          return InteractionRequiredAuthError.createNativeAccountUnavailableError();\n        case NativeStatusCode.USER_INTERACTION_REQUIRED:\n          return new InteractionRequiredAuthError(code, description);\n        case NativeStatusCode.USER_CANCEL:\n          return BrowserAuthError.createUserCancelledError();\n        case NativeStatusCode.NO_NETWORK:\n          return BrowserAuthError.createNoNetworkConnectivityError();\n      }\n    }\n    return new NativeAuthError(code, description, ext);\n  }\n  /**\n   * Creates user switch error when the user chooses a different account in the native broker prompt\n   * @returns\n   */\n  static createUserSwitchError() {\n    return new NativeAuthError(NativeAuthErrorMessage.userSwitch.code, NativeAuthErrorMessage.userSwitch.desc);\n  }\n  /**\n   * Creates a tokens not found error when the internal cache look up fails\n   * @returns NativeAuthError: tokensNotFoundInCache\n   */\n  static createTokensNotFoundInCacheError() {\n    return new NativeAuthError(NativeAuthErrorMessage.tokensNotFoundInCache.code, NativeAuthErrorMessage.tokensNotFoundInCache.desc);\n  }\n}\nexport { NativeAuthError, NativeAuthErrorMessage, NativeStatusCode };","map":{"version":3,"names":["INVALID_METHOD_ERROR","NativeStatusCode","USER_INTERACTION_REQUIRED","USER_CANCEL","NO_NETWORK","TRANSIENT_ERROR","PERSISTENT_ERROR","DISABLED","ACCOUNT_UNAVAILABLE","NativeAuthErrorMessage","extensionError","code","userSwitch","desc","tokensNotFoundInCache","NativeAuthError","AuthError","constructor","errorCode","description","ext","Object","setPrototypeOf","prototype","name","isFatal","status","error","createError","InteractionRequiredAuthError","createNativeAccountUnavailableError","BrowserAuthError","createUserCancelledError","createNoNetworkConnectivityError","createUserSwitchError","createTokensNotFoundInCacheError"],"sources":["../../src/error/NativeAuthError.ts"],"sourcesContent":[null],"mappings":";;;;;;AAAA;;;AAGG;AAaH,MAAMA,oBAAoB,GAAG,CAAC,UAAU;AAE3B,MAAAC,gBAAgB,GAAG;EAC5BC,yBAAyB,EAAE,2BAA2B;EACtDC,WAAW,EAAE,aAAa;EAC1BC,UAAU,EAAE,YAAY;EACxBC,eAAe,EAAE,iBAAiB;EAClCC,gBAAgB,EAAE,kBAAkB;EACpCC,QAAQ,EAAE,UAAU;EACpBC,mBAAmB,EAAE;;AAKZ,MAAAC,sBAAsB,GAAG;EAClCC,cAAc,EAAE;IACZC,IAAI,EAAE;EACT;EACDC,UAAU,EAAE;IACRD,IAAI,EAAE,aAAa;IACnBE,IAAI,EAAE;EACT;EACDC,qBAAqB,EAAE;IACnBH,IAAI,EAAE,2CAA2C;IACjDE,IAAI,EAAE;EACT;;AAGC,MAAOE,eAAgB,SAAQC,SAAS;EAG1CC,YAAYC,SAAiB,EAAEC,WAAmB,EAAEC,GAAa;IAC7D,KAAK,CAACF,SAAS,EAAEC,WAAW,CAAC;IAE7BE,MAAM,CAACC,cAAc,CAAC,IAAI,EAAEP,eAAe,CAACQ,SAAS,CAAC;IACtD,IAAI,CAACC,IAAI,GAAG,iBAAiB;IAC7B,IAAI,CAACJ,GAAG,GAAGA,GAAG;;EAGlB;;AAEG;EACHK,OAAOA,CAAA;IACH,IACI,IAAI,CAACL,GAAG,IACR,IAAI,CAACA,GAAG,CAACM,MAAM,KACd,IAAI,CAACN,GAAG,CAACM,MAAM,KAAKzB,gBAAgB,CAACK,gBAAgB,IAClD,IAAI,CAACc,GAAG,CAACM,MAAM,KAAKzB,gBAAgB,CAACM,QAAQ,CAAC,EACpD;MACE,OAAO,IAAI;IACd;IAED,IACI,IAAI,CAACa,GAAG,IACR,IAAI,CAACA,GAAG,CAACO,KAAK,IACd,IAAI,CAACP,GAAG,CAACO,KAAK,KAAK3B,oBAAoB,EACzC;MACE,OAAO,IAAI;IACd;IAED,QAAQ,IAAI,CAACkB,SAAS;MAClB,KAAKT,sBAAsB,CAACC,cAAc,CAACC,IAAI;QAC3C,OAAO,IAAI;MACf;QACI,OAAO,KAAK;IACnB;;EAGL;;;;;;AAMG;EACH,OAAOiB,WAAWA,CACdjB,IAAY,EACZQ,WAAmB,EACnBC,GAAa;IAEb,IAAIA,GAAG,IAAIA,GAAG,CAACM,MAAM,EAAE;MACnB,QAAQN,GAAG,CAACM,MAAM;QACd,KAAKzB,gBAAgB,CAACO,mBAAmB;UACrC,OAAOqB,4BAA4B,CAACC,mCAAmC,EAAE;QAC7E,KAAK7B,gBAAgB,CAACC,yBAAyB;UAC3C,OAAO,IAAI2B,4BAA4B,CAAClB,IAAI,EAAEQ,WAAW,CAAC;QAC9D,KAAKlB,gBAAgB,CAACE,WAAW;UAC7B,OAAO4B,gBAAgB,CAACC,wBAAwB,EAAE;QACtD,KAAK/B,gBAAgB,CAACG,UAAU;UAC5B,OAAO2B,gBAAgB,CAACE,gCAAgC,EAAE;MACjE;IACJ;IAED,OAAO,IAAIlB,eAAe,CAACJ,IAAI,EAAEQ,WAAW,EAAEC,GAAG,CAAC;;EAGtD;;;AAGG;EACH,OAAOc,qBAAqBA,CAAA;IACxB,OAAO,IAAInB,eAAe,CACtBN,sBAAsB,CAACG,UAAU,CAACD,IAAI,EACtCF,sBAAsB,CAACG,UAAU,CAACC,IAAI,CACzC;;EAGL;;;AAGG;EACH,OAAOsB,gCAAgCA,CAAA;IACnC,OAAO,IAAIpB,eAAe,CACtBN,sBAAsB,CAACK,qBAAqB,CAACH,IAAI,EACjDF,sBAAsB,CAACK,qBAAqB,CAACD,IAAI,CACpD;;AAER"},"metadata":{},"sourceType":"module","externalDependencies":[]}