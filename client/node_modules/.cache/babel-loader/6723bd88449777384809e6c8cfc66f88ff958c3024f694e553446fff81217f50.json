{"ast":null,"code":"/*! @azure/msal-browser v3.0.2 2023-08-18 */\n'use strict';\n\nimport { BrowserAuthError } from '../error/BrowserAuthError.mjs';\nimport { DB_NAME, DB_VERSION, DB_TABLE_NAME } from '../utils/BrowserConstants.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Storage wrapper for IndexedDB storage in browsers: https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API\n */\nclass DatabaseStorage {\n  constructor() {\n    this.dbName = DB_NAME;\n    this.version = DB_VERSION;\n    this.tableName = DB_TABLE_NAME;\n    this.dbOpen = false;\n  }\n  /**\n   * Opens IndexedDB instance.\n   */\n  async open() {\n    return new Promise((resolve, reject) => {\n      const openDB = window.indexedDB.open(this.dbName, this.version);\n      openDB.addEventListener(\"upgradeneeded\", e => {\n        const event = e;\n        event.target.result.createObjectStore(this.tableName);\n      });\n      openDB.addEventListener(\"success\", e => {\n        const event = e;\n        this.db = event.target.result;\n        this.dbOpen = true;\n        resolve();\n      });\n      openDB.addEventListener(\"error\", () => reject(BrowserAuthError.createDatabaseUnavailableError()));\n    });\n  }\n  /**\n   * Closes the connection to IndexedDB database when all pending transactions\n   * complete.\n   */\n  closeConnection() {\n    const db = this.db;\n    if (db && this.dbOpen) {\n      db.close();\n      this.dbOpen = false;\n    }\n  }\n  /**\n   * Opens database if it's not already open\n   */\n  async validateDbIsOpen() {\n    if (!this.dbOpen) {\n      return await this.open();\n    }\n  }\n  /**\n   * Retrieves item from IndexedDB instance.\n   * @param key\n   */\n  async getItem(key) {\n    await this.validateDbIsOpen();\n    return new Promise((resolve, reject) => {\n      // TODO: Add timeouts?\n      if (!this.db) {\n        return reject(BrowserAuthError.createDatabaseNotOpenError());\n      }\n      const transaction = this.db.transaction([this.tableName], \"readonly\");\n      const objectStore = transaction.objectStore(this.tableName);\n      const dbGet = objectStore.get(key);\n      dbGet.addEventListener(\"success\", e => {\n        const event = e;\n        this.closeConnection();\n        resolve(event.target.result);\n      });\n      dbGet.addEventListener(\"error\", e => {\n        this.closeConnection();\n        reject(e);\n      });\n    });\n  }\n  /**\n   * Adds item to IndexedDB under given key\n   * @param key\n   * @param payload\n   */\n  async setItem(key, payload) {\n    await this.validateDbIsOpen();\n    return new Promise((resolve, reject) => {\n      // TODO: Add timeouts?\n      if (!this.db) {\n        return reject(BrowserAuthError.createDatabaseNotOpenError());\n      }\n      const transaction = this.db.transaction([this.tableName], \"readwrite\");\n      const objectStore = transaction.objectStore(this.tableName);\n      const dbPut = objectStore.put(payload, key);\n      dbPut.addEventListener(\"success\", () => {\n        this.closeConnection();\n        resolve();\n      });\n      dbPut.addEventListener(\"error\", e => {\n        this.closeConnection();\n        reject(e);\n      });\n    });\n  }\n  /**\n   * Removes item from IndexedDB under given key\n   * @param key\n   */\n  async removeItem(key) {\n    await this.validateDbIsOpen();\n    return new Promise((resolve, reject) => {\n      if (!this.db) {\n        return reject(BrowserAuthError.createDatabaseNotOpenError());\n      }\n      const transaction = this.db.transaction([this.tableName], \"readwrite\");\n      const objectStore = transaction.objectStore(this.tableName);\n      const dbDelete = objectStore.delete(key);\n      dbDelete.addEventListener(\"success\", () => {\n        this.closeConnection();\n        resolve();\n      });\n      dbDelete.addEventListener(\"error\", e => {\n        this.closeConnection();\n        reject(e);\n      });\n    });\n  }\n  /**\n   * Get all the keys from the storage object as an iterable array of strings.\n   */\n  async getKeys() {\n    await this.validateDbIsOpen();\n    return new Promise((resolve, reject) => {\n      if (!this.db) {\n        return reject(BrowserAuthError.createDatabaseNotOpenError());\n      }\n      const transaction = this.db.transaction([this.tableName], \"readonly\");\n      const objectStore = transaction.objectStore(this.tableName);\n      const dbGetKeys = objectStore.getAllKeys();\n      dbGetKeys.addEventListener(\"success\", e => {\n        const event = e;\n        this.closeConnection();\n        resolve(event.target.result);\n      });\n      dbGetKeys.addEventListener(\"error\", e => {\n        this.closeConnection();\n        reject(e);\n      });\n    });\n  }\n  /**\n   *\n   * Checks whether there is an object under the search key in the object store\n   */\n  async containsKey(key) {\n    await this.validateDbIsOpen();\n    return new Promise((resolve, reject) => {\n      if (!this.db) {\n        return reject(BrowserAuthError.createDatabaseNotOpenError());\n      }\n      const transaction = this.db.transaction([this.tableName], \"readonly\");\n      const objectStore = transaction.objectStore(this.tableName);\n      const dbContainsKey = objectStore.count(key);\n      dbContainsKey.addEventListener(\"success\", e => {\n        const event = e;\n        this.closeConnection();\n        resolve(event.target.result === 1);\n      });\n      dbContainsKey.addEventListener(\"error\", e => {\n        this.closeConnection();\n        reject(e);\n      });\n    });\n  }\n  /**\n   * Deletes the MSAL database. The database is deleted rather than cleared to make it possible\n   * for client applications to downgrade to a previous MSAL version without worrying about forward compatibility issues\n   * with IndexedDB database versions.\n   */\n  async deleteDatabase() {\n    // Check if database being deleted exists\n    if (this.db && this.dbOpen) {\n      this.closeConnection();\n    }\n    return new Promise((resolve, reject) => {\n      const deleteDbRequest = window.indexedDB.deleteDatabase(DB_NAME);\n      deleteDbRequest.addEventListener(\"success\", () => resolve(true));\n      deleteDbRequest.addEventListener(\"blocked\", () => resolve(true));\n      deleteDbRequest.addEventListener(\"error\", () => reject(false));\n    });\n  }\n}\nexport { DatabaseStorage };","map":{"version":3,"names":["DatabaseStorage","constructor","dbName","DB_NAME","version","DB_VERSION","tableName","DB_TABLE_NAME","dbOpen","open","Promise","resolve","reject","openDB","window","indexedDB","addEventListener","e","event","target","result","createObjectStore","db","BrowserAuthError","createDatabaseUnavailableError","closeConnection","close","validateDbIsOpen","getItem","key","createDatabaseNotOpenError","transaction","objectStore","dbGet","get","setItem","payload","dbPut","put","removeItem","dbDelete","delete","getKeys","dbGetKeys","getAllKeys","containsKey","dbContainsKey","count","deleteDatabase","deleteDbRequest"],"sources":["../../src/cache/DatabaseStorage.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}