{"ast":null,"code":"/*! @azure/msal-browser v3.0.2 2023-08-18 */\n'use strict';\n\nimport { OIDC_DEFAULT_SCOPES, PerformanceEvents, Constants, UrlString, ThrottlingUtils, ProtocolUtils, AuthError, ProtocolMode, StringUtils, ServerResponseType } from '@azure/msal-common';\nimport { StandardInteractionClient } from './StandardInteractionClient.mjs';\nimport { EventType } from '../event/EventType.mjs';\nimport { ApiId, InteractionType, BrowserConstants } from '../utils/BrowserConstants.mjs';\nimport { BrowserUtils } from '../utils/BrowserUtils.mjs';\nimport { NativeInteractionClient } from './NativeInteractionClient.mjs';\nimport { NativeMessageHandler } from '../broker/nativeBroker/NativeMessageHandler.mjs';\nimport { BrowserAuthError } from '../error/BrowserAuthError.mjs';\nimport { InteractionHandler } from '../interaction_handler/InteractionHandler.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\nclass PopupClient extends StandardInteractionClient {\n  constructor(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, performanceClient, nativeStorageImpl, nativeMessageHandler, correlationId) {\n    super(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, performanceClient, nativeMessageHandler, correlationId);\n    // Properly sets this reference for the unload event.\n    this.unloadWindow = this.unloadWindow.bind(this);\n    this.nativeStorage = nativeStorageImpl;\n  }\n  /**\r\n   * Acquires tokens by opening a popup window to the /authorize endpoint of the authority\r\n   * @param request\r\n   */\n  acquireToken(request) {\n    try {\n      const popupName = this.generatePopupName(request.scopes || OIDC_DEFAULT_SCOPES, request.authority || this.config.auth.authority);\n      const popupWindowAttributes = request.popupWindowAttributes || {};\n      // asyncPopups flag is true. Acquires token without first opening popup. Popup will be opened later asynchronously.\n      if (this.config.system.asyncPopups) {\n        this.logger.verbose(\"asyncPopups set to true, acquiring token\");\n        // Passes on popup position and dimensions if in request\n        return this.acquireTokenPopupAsync(request, popupName, popupWindowAttributes);\n      } else {\n        // asyncPopups flag is set to false. Opens popup before acquiring token.\n        this.logger.verbose(\"asyncPopup set to false, opening popup before acquiring token\");\n        const popup = this.openSizedPopup(\"about:blank\", popupName, popupWindowAttributes);\n        return this.acquireTokenPopupAsync(request, popupName, popupWindowAttributes, popup);\n      }\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }\n  /**\r\n   * Clears local cache for the current user then opens a popup window prompting the user to sign-out of the server\r\n   * @param logoutRequest\r\n   */\n  logout(logoutRequest) {\n    try {\n      this.logger.verbose(\"logoutPopup called\");\n      const validLogoutRequest = this.initializeLogoutRequest(logoutRequest);\n      const popupName = this.generateLogoutPopupName(validLogoutRequest);\n      const authority = logoutRequest && logoutRequest.authority;\n      const mainWindowRedirectUri = logoutRequest && logoutRequest.mainWindowRedirectUri;\n      const popupWindowAttributes = logoutRequest?.popupWindowAttributes || {};\n      // asyncPopups flag is true. Acquires token without first opening popup. Popup will be opened later asynchronously.\n      if (this.config.system.asyncPopups) {\n        this.logger.verbose(\"asyncPopups set to true\");\n        // Passes on popup position and dimensions if in request\n        return this.logoutPopupAsync(validLogoutRequest, popupName, popupWindowAttributes, authority, undefined, mainWindowRedirectUri);\n      } else {\n        // asyncPopups flag is set to false. Opens popup before logging out.\n        this.logger.verbose(\"asyncPopup set to false, opening popup\");\n        const popup = this.openSizedPopup(\"about:blank\", popupName, popupWindowAttributes);\n        return this.logoutPopupAsync(validLogoutRequest, popupName, popupWindowAttributes, authority, popup, mainWindowRedirectUri);\n      }\n    } catch (e) {\n      // Since this function is synchronous we need to reject\n      return Promise.reject(e);\n    }\n  }\n  /**\r\n   * Helper which obtains an access_token for your API via opening a popup window in the user's browser\r\n   * @param validRequest\r\n   * @param popupName\r\n   * @param popup\r\n   * @param popupWindowAttributes\r\n   *\r\n   * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\r\n   */\n  async acquireTokenPopupAsync(request, popupName, popupWindowAttributes, popup) {\n    this.logger.verbose(\"acquireTokenPopupAsync called\");\n    const serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.acquireTokenPopup);\n    this.performanceClient.setPreQueueTime(PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest, request.correlationId);\n    const validRequest = await this.initializeAuthorizationRequest(request, InteractionType.Popup);\n    this.browserStorage.updateCacheEntries(validRequest.state, validRequest.nonce, validRequest.authority, validRequest.loginHint || Constants.EMPTY_STRING, validRequest.account || null);\n    try {\n      // Create auth code request and generate PKCE params\n      this.performanceClient.setPreQueueTime(PerformanceEvents.StandardInteractionClientInitializeAuthorizationCodeRequest, request.correlationId);\n      const authCodeRequest = await this.initializeAuthorizationCodeRequest(validRequest);\n      // Initialize the client\n      this.performanceClient.setPreQueueTime(PerformanceEvents.StandardInteractionClientCreateAuthCodeClient, request.correlationId);\n      const authClient = await this.createAuthCodeClient(serverTelemetryManager, validRequest.authority, validRequest.azureCloudOptions);\n      this.logger.verbose(\"Auth code client created\");\n      const isNativeBroker = NativeMessageHandler.isNativeAvailable(this.config, this.logger, this.nativeMessageHandler, request.authenticationScheme);\n      // Start measurement for server calls with native brokering enabled\n      let fetchNativeAccountIdMeasurement;\n      if (isNativeBroker) {\n        fetchNativeAccountIdMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.FetchAccountIdWithNativeBroker, request.correlationId);\n      }\n      // Create acquire token url.\n      const navigateUrl = await authClient.getAuthCodeUrl({\n        ...validRequest,\n        nativeBroker: isNativeBroker\n      });\n      // Create popup interaction handler.\n      const interactionHandler = new InteractionHandler(authClient, this.browserStorage, authCodeRequest, this.logger, this.performanceClient);\n      // Show the UI once the url has been created. Get the window handle for the popup.\n      const popupParameters = {\n        popup,\n        popupName,\n        popupWindowAttributes\n      };\n      const popupWindow = this.initiateAuthRequest(navigateUrl, popupParameters);\n      this.eventHandler.emitEvent(EventType.POPUP_OPENED, InteractionType.Popup, {\n        popupWindow\n      }, null);\n      // Monitor the window for the hash. Return the string value and close the popup when the hash is received. Default timeout is 60 seconds.\n      const hash = await this.monitorPopupForHash(popupWindow);\n      // Deserialize hash fragment response parameters.\n      const serverParams = UrlString.getDeserializedHash(hash);\n      const state = this.validateAndExtractStateFromHash(serverParams, InteractionType.Popup, validRequest.correlationId);\n      // Remove throttle if it exists\n      ThrottlingUtils.removeThrottle(this.browserStorage, this.config.auth.clientId, authCodeRequest);\n      if (serverParams.accountId) {\n        this.logger.verbose(\"Account id found in hash, calling WAM for token\");\n        // end measurement for server call with native brokering enabled\n        if (fetchNativeAccountIdMeasurement) {\n          fetchNativeAccountIdMeasurement.end({\n            success: true,\n            isNativeBroker: true\n          });\n        }\n        if (!this.nativeMessageHandler) {\n          throw BrowserAuthError.createNativeConnectionNotEstablishedError();\n        }\n        const nativeInteractionClient = new NativeInteractionClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, ApiId.acquireTokenPopup, this.performanceClient, this.nativeMessageHandler, serverParams.accountId, this.nativeStorage, validRequest.correlationId);\n        const {\n          userRequestState\n        } = ProtocolUtils.parseRequestState(this.browserCrypto, state);\n        return nativeInteractionClient.acquireToken({\n          ...validRequest,\n          state: userRequestState,\n          prompt: undefined // Server should handle the prompt, ideally native broker can do this part silently\n        }).finally(() => {\n          this.browserStorage.cleanRequestByState(state);\n        });\n      }\n      // Handle response from hash string.\n      const result = await interactionHandler.handleCodeResponseFromHash(hash, state, authClient.authority, this.networkClient);\n      return result;\n    } catch (e) {\n      if (popup) {\n        // Close the synchronous popup if an error is thrown before the window unload event is registered\n        popup.close();\n      }\n      if (e instanceof AuthError) {\n        e.setCorrelationId(this.correlationId);\n        serverTelemetryManager.cacheFailedRequest(e);\n      }\n      this.browserStorage.cleanRequestByState(validRequest.state);\n      throw e;\n    }\n  }\n  /**\r\n   *\r\n   * @param validRequest\r\n   * @param popupName\r\n   * @param requestAuthority\r\n   * @param popup\r\n   * @param mainWindowRedirectUri\r\n   * @param popupWindowAttributes\r\n   */\n  async logoutPopupAsync(validRequest, popupName, popupWindowAttributes, requestAuthority, popup, mainWindowRedirectUri) {\n    this.logger.verbose(\"logoutPopupAsync called\");\n    this.eventHandler.emitEvent(EventType.LOGOUT_START, InteractionType.Popup, validRequest);\n    const serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.logoutPopup);\n    try {\n      // Clear cache on logout\n      await this.clearCacheOnLogout(validRequest.account);\n      // Initialize the client\n      this.performanceClient.setPreQueueTime(PerformanceEvents.StandardInteractionClientCreateAuthCodeClient, validRequest.correlationId);\n      const authClient = await this.createAuthCodeClient(serverTelemetryManager, requestAuthority);\n      this.logger.verbose(\"Auth code client created\");\n      try {\n        authClient.authority.endSessionEndpoint;\n      } catch {\n        if (validRequest.account?.homeAccountId && validRequest.postLogoutRedirectUri && authClient.authority.protocolMode === ProtocolMode.OIDC) {\n          this.browserStorage.removeAccount(validRequest.account?.homeAccountId);\n          this.eventHandler.emitEvent(EventType.LOGOUT_SUCCESS, InteractionType.Popup, validRequest);\n          if (mainWindowRedirectUri) {\n            const navigationOptions = {\n              apiId: ApiId.logoutPopup,\n              timeout: this.config.system.redirectNavigationTimeout,\n              noHistory: false\n            };\n            const absoluteUrl = UrlString.getAbsoluteUrl(mainWindowRedirectUri, BrowserUtils.getCurrentUri());\n            await this.navigationClient.navigateInternal(absoluteUrl, navigationOptions);\n          }\n          if (popup) {\n            popup.close();\n          }\n          return;\n        }\n      }\n      // Create logout string and navigate user window to logout.\n      const logoutUri = authClient.getLogoutUri(validRequest);\n      this.eventHandler.emitEvent(EventType.LOGOUT_SUCCESS, InteractionType.Popup, validRequest);\n      // Open the popup window to requestUrl.\n      const popupWindow = this.openPopup(logoutUri, {\n        popupName,\n        popupWindowAttributes,\n        popup\n      });\n      this.eventHandler.emitEvent(EventType.POPUP_OPENED, InteractionType.Popup, {\n        popupWindow\n      }, null);\n      await this.waitForLogoutPopup(popupWindow);\n      if (mainWindowRedirectUri) {\n        const navigationOptions = {\n          apiId: ApiId.logoutPopup,\n          timeout: this.config.system.redirectNavigationTimeout,\n          noHistory: false\n        };\n        const absoluteUrl = UrlString.getAbsoluteUrl(mainWindowRedirectUri, BrowserUtils.getCurrentUri());\n        this.logger.verbose(\"Redirecting main window to url specified in the request\");\n        this.logger.verbosePii(`Redirecting main window to: ${absoluteUrl}`);\n        this.navigationClient.navigateInternal(absoluteUrl, navigationOptions);\n      } else {\n        this.logger.verbose(\"No main window navigation requested\");\n      }\n    } catch (e) {\n      if (popup) {\n        // Close the synchronous popup if an error is thrown before the window unload event is registered\n        popup.close();\n      }\n      if (e instanceof AuthError) {\n        e.setCorrelationId(this.correlationId);\n        serverTelemetryManager.cacheFailedRequest(e);\n      }\n      this.browserStorage.setInteractionInProgress(false);\n      this.eventHandler.emitEvent(EventType.LOGOUT_FAILURE, InteractionType.Popup, null, e);\n      this.eventHandler.emitEvent(EventType.LOGOUT_END, InteractionType.Popup);\n      throw e;\n    }\n    this.eventHandler.emitEvent(EventType.LOGOUT_END, InteractionType.Popup);\n  }\n  /**\r\n   * Opens a popup window with given request Url.\r\n   * @param requestUrl\r\n   */\n  initiateAuthRequest(requestUrl, params) {\n    // Check that request url is not empty.\n    if (!StringUtils.isEmpty(requestUrl)) {\n      this.logger.infoPii(`Navigate to: ${requestUrl}`);\n      // Open the popup window to requestUrl.\n      return this.openPopup(requestUrl, params);\n    } else {\n      // Throw error if request URL is empty.\n      this.logger.error(\"Navigate url is empty\");\n      throw BrowserAuthError.createEmptyNavigationUriError();\n    }\n  }\n  /**\r\n   * Monitors a window until it loads a url with the same origin.\r\n   * @param popupWindow - window that is being monitored\r\n   * @param timeout - timeout for processing hash once popup is redirected back to application\r\n   */\n  monitorPopupForHash(popupWindow) {\n    return new Promise((resolve, reject) => {\n      /*\r\n       * Polling for popups needs to be tick-based,\r\n       * since a non-trivial amount of time can be spent on interaction (which should not count against the timeout).\r\n       */\n      const maxTicks = this.config.system.windowHashTimeout / this.config.system.pollIntervalMilliseconds;\n      let ticks = 0;\n      this.logger.verbose(\"PopupHandler.monitorPopupForHash - polling started\");\n      const intervalId = setInterval(() => {\n        // Window is closed\n        if (popupWindow.closed) {\n          this.logger.error(\"PopupHandler.monitorPopupForHash - window closed\");\n          this.cleanPopup();\n          clearInterval(intervalId);\n          reject(BrowserAuthError.createUserCancelledError());\n          return;\n        }\n        let href = Constants.EMPTY_STRING;\n        let serverResponseString = Constants.EMPTY_STRING;\n        try {\n          /*\r\n           * Will throw if cross origin,\r\n           * which should be caught and ignored\r\n           * since we need the interval to keep running while on STS UI.\r\n           */\n          href = popupWindow.location.href;\n          serverResponseString = this.extractServerResponseStringFromPopup(popupWindow, href);\n        } catch (e) {}\n        // Don't process blank pages or cross domain\n        if (StringUtils.isEmpty(href) || href === \"about:blank\") {\n          return;\n        }\n        this.logger.verbose(\"PopupHandler.monitorPopupForHash - popup window is on same origin as caller\");\n        /*\r\n         * Only run clock when we are on same domain for popups\r\n         * as popup operations can take a long time.\r\n         */\n        ticks++;\n        if (serverResponseString) {\n          this.logger.verbose(\"PopupHandler.monitorPopupForHash - found hash in url\");\n          clearInterval(intervalId);\n          this.cleanPopup(popupWindow);\n          if (UrlString.hashContainsKnownProperties(serverResponseString)) {\n            this.logger.verbose(\"PopupHandler.monitorPopupForHash - hash contains known properties, returning.\");\n            resolve(serverResponseString);\n          } else {\n            this.logger.error(\"PopupHandler.monitorPopupForHash - found hash in url but it does not contain known properties. Check that your router is not changing the hash prematurely.\");\n            this.logger.errorPii(`PopupHandler.monitorPopupForHash - hash found: ${serverResponseString}`);\n            reject(BrowserAuthError.createHashDoesNotContainKnownPropertiesError());\n          }\n        } else if (ticks > maxTicks) {\n          this.logger.error(\"PopupHandler.monitorPopupForHash - unable to find hash in url, timing out\");\n          clearInterval(intervalId);\n          reject(BrowserAuthError.createMonitorPopupTimeoutError());\n        }\n      }, this.config.system.pollIntervalMilliseconds);\n    });\n  }\n  /**\r\n   * Waits for user interaction in logout popup window\r\n   * @param popupWindow\r\n   * @returns\r\n   */\n  waitForLogoutPopup(popupWindow) {\n    return new Promise(resolve => {\n      this.logger.verbose(\"PopupHandler.waitForLogoutPopup - polling started\");\n      const intervalId = setInterval(() => {\n        // Window is closed\n        if (popupWindow.closed) {\n          this.logger.error(\"PopupHandler.waitForLogoutPopup - window closed\");\n          this.cleanPopup();\n          clearInterval(intervalId);\n          resolve();\n        }\n        let href = Constants.EMPTY_STRING;\n        try {\n          /*\r\n           * Will throw if cross origin,\r\n           * which should be caught and ignored\r\n           * since we need the interval to keep running while on STS UI.\r\n           */\n          href = popupWindow.location.href;\n        } catch (e) {}\n        // Don't process blank pages or cross domain\n        if (StringUtils.isEmpty(href) || href === \"about:blank\") {\n          return;\n        }\n        this.logger.verbose(\"PopupHandler.waitForLogoutPopup - popup window is on same origin as caller, closing.\");\n        clearInterval(intervalId);\n        this.cleanPopup(popupWindow);\n        resolve();\n      }, this.config.system.pollIntervalMilliseconds);\n    });\n  }\n  /**\r\n   * @hidden\r\n   *\r\n   * Configures popup window for login.\r\n   *\r\n   * @param urlNavigate\r\n   * @param title\r\n   * @param popUpWidth\r\n   * @param popUpHeight\r\n   * @param popupWindowAttributes\r\n   * @ignore\r\n   * @hidden\r\n   */\n  openPopup(urlNavigate, popupParams) {\n    try {\n      let popupWindow;\n      // Popup window passed in, setting url to navigate to\n      if (popupParams.popup) {\n        popupWindow = popupParams.popup;\n        this.logger.verbosePii(`Navigating popup window to: ${urlNavigate}`);\n        popupWindow.location.assign(urlNavigate);\n      } else if (typeof popupParams.popup === \"undefined\") {\n        // Popup will be undefined if it was not passed in\n        this.logger.verbosePii(`Opening popup window to: ${urlNavigate}`);\n        popupWindow = this.openSizedPopup(urlNavigate, popupParams.popupName, popupParams.popupWindowAttributes);\n      }\n      // Popup will be null if popups are blocked\n      if (!popupWindow) {\n        throw BrowserAuthError.createEmptyWindowCreatedError();\n      }\n      if (popupWindow.focus) {\n        popupWindow.focus();\n      }\n      this.currentWindow = popupWindow;\n      window.addEventListener(\"beforeunload\", this.unloadWindow);\n      return popupWindow;\n    } catch (e) {\n      this.logger.error(\"error opening popup \" + e.message);\n      this.browserStorage.setInteractionInProgress(false);\n      throw BrowserAuthError.createPopupWindowError(e.toString());\n    }\n  }\n  /**\r\n   * Helper function to set popup window dimensions and position\r\n   * @param urlNavigate\r\n   * @param popupName\r\n   * @param popupWindowAttributes\r\n   * @returns\r\n   */\n  openSizedPopup(urlNavigate, popupName, popupWindowAttributes) {\n    /**\r\n     * adding winLeft and winTop to account for dual monitor\r\n     * using screenLeft and screenTop for IE8 and earlier\r\n     */\n    const winLeft = window.screenLeft ? window.screenLeft : window.screenX;\n    const winTop = window.screenTop ? window.screenTop : window.screenY;\n    /**\r\n     * window.innerWidth displays browser window\"s height and width excluding toolbars\r\n     * using document.documentElement.clientWidth for IE8 and earlier\r\n     */\n    const winWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n    const winHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n    let width = popupWindowAttributes.popupSize?.width;\n    let height = popupWindowAttributes.popupSize?.height;\n    let top = popupWindowAttributes.popupPosition?.top;\n    let left = popupWindowAttributes.popupPosition?.left;\n    if (!width || width < 0 || width > winWidth) {\n      this.logger.verbose(\"Default popup window width used. Window width not configured or invalid.\");\n      width = BrowserConstants.POPUP_WIDTH;\n    }\n    if (!height || height < 0 || height > winHeight) {\n      this.logger.verbose(\"Default popup window height used. Window height not configured or invalid.\");\n      height = BrowserConstants.POPUP_HEIGHT;\n    }\n    if (!top || top < 0 || top > winHeight) {\n      this.logger.verbose(\"Default popup window top position used. Window top not configured or invalid.\");\n      top = Math.max(0, winHeight / 2 - BrowserConstants.POPUP_HEIGHT / 2 + winTop);\n    }\n    if (!left || left < 0 || left > winWidth) {\n      this.logger.verbose(\"Default popup window left position used. Window left not configured or invalid.\");\n      left = Math.max(0, winWidth / 2 - BrowserConstants.POPUP_WIDTH / 2 + winLeft);\n    }\n    return window.open(urlNavigate, popupName, `width=${width}, height=${height}, top=${top}, left=${left}, scrollbars=yes`);\n  }\n  /**\r\n   * Event callback to unload main window.\r\n   */\n  unloadWindow(e) {\n    this.browserStorage.cleanRequestByInteractionType(InteractionType.Popup);\n    if (this.currentWindow) {\n      this.currentWindow.close();\n    }\n    // Guarantees browser unload will happen, so no other errors will be thrown.\n    e.preventDefault();\n  }\n  /**\r\n   * Closes popup, removes any state vars created during popup calls.\r\n   * @param popupWindow\r\n   */\n  cleanPopup(popupWindow) {\n    if (popupWindow) {\n      // Close window.\n      popupWindow.close();\n    }\n    // Remove window unload function\n    window.removeEventListener(\"beforeunload\", this.unloadWindow);\n    // Interaction is completed - remove interaction status.\n    this.browserStorage.setInteractionInProgress(false);\n  }\n  /**\r\n   * Generates the name for the popup based on the client id and request\r\n   * @param clientId\r\n   * @param request\r\n   */\n  generatePopupName(scopes, authority) {\n    return `${BrowserConstants.POPUP_NAME_PREFIX}.${this.config.auth.clientId}.${scopes.join(\"-\")}.${authority}.${this.correlationId}`;\n  }\n  /**\r\n   * Generates the name for the popup based on the client id and request for logouts\r\n   * @param clientId\r\n   * @param request\r\n   */\n  generateLogoutPopupName(request) {\n    const homeAccountId = request.account && request.account.homeAccountId;\n    return `${BrowserConstants.POPUP_NAME_PREFIX}.${this.config.auth.clientId}.${homeAccountId}.${this.correlationId}`;\n  }\n  /**\r\n   * Extracts the server response from the popup window\r\n   */\n  extractServerResponseStringFromPopup(popupWindow, href) {\n    let serverResponseString;\n    if (this.config.auth.OIDCOptions?.serverResponseType === ServerResponseType.QUERY) {\n      serverResponseString = UrlString.parseQueryServerResponse(href);\n    } else {\n      serverResponseString = popupWindow.location.hash;\n    }\n    return serverResponseString;\n  }\n}\nexport { PopupClient };","map":{"version":3,"names":["PopupClient","StandardInteractionClient","constructor","config","storageImpl","browserCrypto","logger","eventHandler","navigationClient","performanceClient","nativeStorageImpl","nativeMessageHandler","correlationId","unloadWindow","bind","nativeStorage","acquireToken","request","popupName","generatePopupName","scopes","OIDC_DEFAULT_SCOPES","authority","auth","popupWindowAttributes","system","asyncPopups","verbose","acquireTokenPopupAsync","popup","openSizedPopup","e","Promise","reject","logout","logoutRequest","validLogoutRequest","initializeLogoutRequest","generateLogoutPopupName","mainWindowRedirectUri","logoutPopupAsync","undefined","serverTelemetryManager","initializeServerTelemetryManager","ApiId","acquireTokenPopup","setPreQueueTime","PerformanceEvents","StandardInteractionClientInitializeAuthorizationRequest","validRequest","initializeAuthorizationRequest","InteractionType","Popup","browserStorage","updateCacheEntries","state","nonce","loginHint","Constants","EMPTY_STRING","account","StandardInteractionClientInitializeAuthorizationCodeRequest","authCodeRequest","initializeAuthorizationCodeRequest","StandardInteractionClientCreateAuthCodeClient","authClient","createAuthCodeClient","azureCloudOptions","isNativeBroker","NativeMessageHandler","isNativeAvailable","authenticationScheme","fetchNativeAccountIdMeasurement","startMeasurement","FetchAccountIdWithNativeBroker","navigateUrl","getAuthCodeUrl","nativeBroker","interactionHandler","InteractionHandler","popupParameters","popupWindow","initiateAuthRequest","emitEvent","EventType","POPUP_OPENED","hash","monitorPopupForHash","serverParams","UrlString","getDeserializedHash","validateAndExtractStateFromHash","ThrottlingUtils","removeThrottle","clientId","accountId","end","success","BrowserAuthError","createNativeConnectionNotEstablishedError","nativeInteractionClient","NativeInteractionClient","userRequestState","ProtocolUtils","parseRequestState","prompt","finally","cleanRequestByState","result","handleCodeResponseFromHash","networkClient","close","AuthError","setCorrelationId","cacheFailedRequest","requestAuthority","LOGOUT_START","logoutPopup","clearCacheOnLogout","endSessionEndpoint","homeAccountId","postLogoutRedirectUri","protocolMode","ProtocolMode","OIDC","removeAccount","LOGOUT_SUCCESS","navigationOptions","apiId","timeout","redirectNavigationTimeout","noHistory","absoluteUrl","getAbsoluteUrl","BrowserUtils","getCurrentUri","navigateInternal","logoutUri","getLogoutUri","openPopup","waitForLogoutPopup","verbosePii","setInteractionInProgress","LOGOUT_FAILURE","LOGOUT_END","requestUrl","params","StringUtils","isEmpty","infoPii","error","createEmptyNavigationUriError","resolve","maxTicks","windowHashTimeout","pollIntervalMilliseconds","ticks","intervalId","setInterval","closed","cleanPopup","clearInterval","createUserCancelledError","href","serverResponseString","location","extractServerResponseStringFromPopup","hashContainsKnownProperties","errorPii","createHashDoesNotContainKnownPropertiesError","createMonitorPopupTimeoutError","urlNavigate","popupParams","assign","createEmptyWindowCreatedError","focus","currentWindow","window","addEventListener","message","createPopupWindowError","toString","winLeft","screenLeft","screenX","winTop","screenTop","screenY","winWidth","innerWidth","document","documentElement","clientWidth","body","winHeight","innerHeight","clientHeight","width","popupSize","height","top","popupPosition","left","BrowserConstants","POPUP_WIDTH","POPUP_HEIGHT","Math","max","open","cleanRequestByInteractionType","preventDefault","removeEventListener","POPUP_NAME_PREFIX","join","OIDCOptions","serverResponseType","ServerResponseType","QUERY","parseQueryServerResponse"],"sources":["../../src/interaction_client/PopupClient.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}