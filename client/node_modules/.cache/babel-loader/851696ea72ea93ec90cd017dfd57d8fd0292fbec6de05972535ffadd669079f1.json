{"ast":null,"code":"/*! @azure/msal-common v14.0.2 2023-08-18 */\n'use strict';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n/**\r\n * Enumeration of operations that are instrumented by have their performance measured by the PerformanceClient.\r\n *\r\n * @export\r\n * @enum {number}\r\n */\nconst PerformanceEvents = {\n  /**\r\n   * acquireTokenByCode API (msal-browser and msal-node).\r\n   * Used to acquire tokens by trading an authorization code against the token endpoint.\r\n   */\n  AcquireTokenByCode: \"acquireTokenByCode\",\n  /**\r\n   * acquireTokenByRefreshToken API (msal-browser and msal-node).\r\n   * Used to renew an access token using a refresh token against the token endpoint.\r\n   */\n  AcquireTokenByRefreshToken: \"acquireTokenByRefreshToken\",\n  /**\r\n   * acquireTokenSilent API (msal-browser and msal-node).\r\n   * Used to silently acquire a new access token (from the cache or the network).\r\n   */\n  AcquireTokenSilent: \"acquireTokenSilent\",\n  /**\r\n   * acquireTokenSilentAsync (msal-browser).\r\n   * Internal API for acquireTokenSilent.\r\n   */\n  AcquireTokenSilentAsync: \"acquireTokenSilentAsync\",\n  /**\r\n   * acquireTokenPopup (msal-browser).\r\n   * Used to acquire a new access token interactively through pop ups\r\n   */\n  AcquireTokenPopup: \"acquireTokenPopup\",\n  /**\r\n   * getPublicKeyThumbprint API in CryptoOpts class (msal-browser).\r\n   * Used to generate a public/private keypair and generate a public key thumbprint for pop requests.\r\n   */\n  CryptoOptsGetPublicKeyThumbprint: \"cryptoOptsGetPublicKeyThumbprint\",\n  /**\r\n   * signJwt API in CryptoOpts class (msal-browser).\r\n   * Used to signed a pop token.\r\n   */\n  CryptoOptsSignJwt: \"cryptoOptsSignJwt\",\n  /**\r\n   * acquireToken API in the SilentCacheClient class (msal-browser).\r\n   * Used to read access tokens from the cache.\r\n   */\n  SilentCacheClientAcquireToken: \"silentCacheClientAcquireToken\",\n  /**\r\n   * acquireToken API in the SilentIframeClient class (msal-browser).\r\n   * Used to acquire a new set of tokens from the authorize endpoint in a hidden iframe.\r\n   */\n  SilentIframeClientAcquireToken: \"silentIframeClientAcquireToken\",\n  /**\r\n   * acquireToken API in SilentRereshClient (msal-browser).\r\n   * Used to acquire a new set of tokens from the token endpoint using a refresh token.\r\n   */\n  SilentRefreshClientAcquireToken: \"silentRefreshClientAcquireToken\",\n  /**\r\n   * ssoSilent API (msal-browser).\r\n   * Used to silently acquire an authorization code and set of tokens using a hidden iframe.\r\n   */\n  SsoSilent: \"ssoSilent\",\n  /**\r\n   * getDiscoveredAuthority API in StandardInteractionClient class (msal-browser).\r\n   * Used to load authority metadata for a request.\r\n   */\n  StandardInteractionClientGetDiscoveredAuthority: \"standardInteractionClientGetDiscoveredAuthority\",\n  /**\r\n   * acquireToken APIs in msal-browser.\r\n   * Used to make an /authorize endpoint call with native brokering enabled.\r\n   */\n  FetchAccountIdWithNativeBroker: \"fetchAccountIdWithNativeBroker\",\n  /**\r\n   * acquireToken API in NativeInteractionClient class (msal-browser).\r\n   * Used to acquire a token from Native component when native brokering is enabled.\r\n   */\n  NativeInteractionClientAcquireToken: \"nativeInteractionClientAcquireToken\",\n  /**\r\n   * Time spent creating default headers for requests to token endpoint\r\n   */\n  BaseClientCreateTokenRequestHeaders: \"baseClientCreateTokenRequestHeaders\",\n  /**\r\n   * Used to measure the time taken for completing embedded-broker handshake (PW-Broker).\r\n   */\n  BrokerHandhshake: \"brokerHandshake\",\n  /**\r\n   * acquireTokenByRefreshToken API in BrokerClientApplication (PW-Broker) .\r\n   */\n  AcquireTokenByRefreshTokenInBroker: \"acquireTokenByRefreshTokenInBroker\",\n  /**\r\n   * Time taken for token acquisition by broker\r\n   */\n  AcquireTokenByBroker: \"acquireTokenByBroker\",\n  /**\r\n   * Time spent on the network for refresh token acquisition\r\n   */\n  RefreshTokenClientExecuteTokenRequest: \"refreshTokenClientExecuteTokenRequest\",\n  /**\r\n   * Time taken for acquiring refresh token , records RT size\r\n   */\n  RefreshTokenClientAcquireToken: \"refreshTokenClientAcquireToken\",\n  /**\r\n   * Time taken for acquiring cached refresh token\r\n   */\n  RefreshTokenClientAcquireTokenWithCachedRefreshToken: \"refreshTokenClientAcquireTokenWithCachedRefreshToken\",\n  /**\r\n   * acquireTokenByRefreshToken API in RefreshTokenClient (msal-common).\r\n   */\n  RefreshTokenClientAcquireTokenByRefreshToken: \"refreshTokenClientAcquireTokenByRefreshToken\",\n  /**\r\n   * Helper function to create token request body in RefreshTokenClient (msal-common).\r\n   */\n  RefreshTokenClientCreateTokenRequestBody: \"refreshTokenClientCreateTokenRequestBody\",\n  /**\r\n   * acquireTokenFromCache (msal-browser).\r\n   * Internal API for acquiring token from cache\r\n   */\n  AcquireTokenFromCache: \"acquireTokenFromCache\",\n  /**\r\n   * acquireTokenBySilentIframe (msal-browser).\r\n   * Internal API for acquiring token by silent Iframe\r\n   */\n  AcquireTokenBySilentIframe: \"acquireTokenBySilentIframe\",\n  /**\r\n   * Internal API for initializing base request in BaseInteractionClient (msal-browser)\r\n   */\n  InitializeBaseRequest: \"initializeBaseRequest\",\n  /**\r\n   * Internal API for initializing silent request in SilentCacheClient (msal-browser)\r\n   */\n  InitializeSilentRequest: \"initializeSilentRequest\",\n  InitializeClientApplication: \"initializeClientApplication\",\n  /**\r\n   * Helper function in SilentIframeClient class (msal-browser).\r\n   */\n  SilentIframeClientTokenHelper: \"silentIframeClientTokenHelper\",\n  /**\r\n   * SilentHandler\r\n   */\n  SilentHandlerInitiateAuthRequest: \"silentHandlerInitiateAuthRequest\",\n  SilentHandlerMonitorIframeForHash: \"silentHandlerMonitorIframeForHash\",\n  SilentHandlerLoadFrame: \"silentHandlerLoadFrame\",\n  /**\r\n   * Helper functions in StandardInteractionClient class (msal-browser)\r\n   */\n  StandardInteractionClientCreateAuthCodeClient: \"standardInteractionClientCreateAuthCodeClient\",\n  StandardInteractionClientGetClientConfiguration: \"standardInteractionClientGetClientConfiguration\",\n  StandardInteractionClientInitializeAuthorizationRequest: \"standardInteractionClientInitializeAuthorizationRequest\",\n  StandardInteractionClientInitializeAuthorizationCodeRequest: \"standardInteractionClientInitializeAuthorizationCodeRequest\",\n  /**\r\n   * getAuthCodeUrl API (msal-browser and msal-node).\r\n   */\n  GetAuthCodeUrl: \"getAuthCodeUrl\",\n  /**\r\n   * Functions from InteractionHandler (msal-browser)\r\n   */\n  HandleCodeResponseFromServer: \"handleCodeResponseFromServer\",\n  HandleCodeResponseFromHash: \"handleCodeResponseFromHash\",\n  UpdateTokenEndpointAuthority: \"updateTokenEndpointAuthority\",\n  /**\r\n   * APIs in Authorization Code Client (msal-common)\r\n   */\n  AuthClientAcquireToken: \"authClientAcquireToken\",\n  AuthClientExecuteTokenRequest: \"authClientExecuteTokenRequest\",\n  AuthClientCreateTokenRequestBody: \"authClientCreateTokenRequestBody\",\n  AuthClientCreateQueryString: \"authClientCreateQueryString\",\n  /**\r\n   * Generate functions in PopTokenGenerator (msal-common)\r\n   */\n  PopTokenGenerateCnf: \"popTokenGenerateCnf\",\n  PopTokenGenerateKid: \"popTokenGenerateKid\",\n  /**\r\n   * handleServerTokenResponse API in ResponseHandler (msal-common)\r\n   */\n  HandleServerTokenResponse: \"handleServerTokenResponse\",\n  /**\r\n   * Authority functions\r\n   */\n  AuthorityFactoryCreateDiscoveredInstance: \"authorityFactoryCreateDiscoveredInstance\",\n  AuthorityResolveEndpointsAsync: \"authorityResolveEndpointsAsync\",\n  AuthorityGetCloudDiscoveryMetadataFromNetwork: \"authorityGetCloudDiscoveryMetadataFromNetwork\",\n  AuthorityUpdateCloudDiscoveryMetadata: \"authorityUpdateCloudDiscoveryMetadata\",\n  AuthorityGetEndpointMetadataFromNetwork: \"authorityGetEndpointMetadataFromNetwork\",\n  AuthorityUpdateEndpointMetadata: \"authorityUpdateEndpointMetadata\",\n  AuthorityUpdateMetadataWithRegionalInformation: \"authorityUpdateMetadataWithRegionalInformation\",\n  /**\r\n   * Region Discovery functions\r\n   */\n  RegionDiscoveryDetectRegion: \"regionDiscoveryDetectRegion\",\n  RegionDiscoveryGetRegionFromIMDS: \"regionDiscoveryGetRegionFromIMDS\",\n  RegionDiscoveryGetCurrentVersion: \"regionDiscoveryGetCurrentVersion\",\n  AcquireTokenByCodeAsync: \"acquireTokenByCodeAsync\",\n  GetEndpointMetadataFromNetwork: \"getEndpointMetadataFromNetwork\",\n  GetCloudDiscoveryMetadataFromNetworkMeasurement: \"getCloudDiscoveryMetadataFromNetworkMeasurement\",\n  HandleRedirectPromiseMeasurement: \"handleRedirectPromiseMeasurement\",\n  UpdateCloudDiscoveryMetadataMeasurement: \"updateCloudDiscoveryMetadataMeasurement\",\n  UsernamePasswordClientAcquireToken: \"usernamePasswordClientAcquireToken\",\n  NativeMessageHandlerHandshake: \"nativeMessageHandlerHandshake\",\n  NativeGenerateAuthResult: \"nativeGenerateAuthResult\"\n};\n/**\r\n * State of the performance event.\r\n *\r\n * @export\r\n * @enum {number}\r\n */\nconst PerformanceEventStatus = {\n  NotStarted: 0,\n  InProgress: 1,\n  Completed: 2\n};\nconst IntFields = new Set([\"accessTokenSize\", \"durationMs\", \"idTokenSize\", \"matsSilentStatus\", \"matsHttpStatus\", \"refreshTokenSize\", \"queuedTimeMs\", \"startTimeMs\", \"status\"]);\nexport { IntFields, PerformanceEventStatus, PerformanceEvents };","map":{"version":3,"names":["PerformanceEvents","AcquireTokenByCode","AcquireTokenByRefreshToken","AcquireTokenSilent","AcquireTokenSilentAsync","AcquireTokenPopup","CryptoOptsGetPublicKeyThumbprint","CryptoOptsSignJwt","SilentCacheClientAcquireToken","SilentIframeClientAcquireToken","SilentRefreshClientAcquireToken","SsoSilent","StandardInteractionClientGetDiscoveredAuthority","FetchAccountIdWithNativeBroker","NativeInteractionClientAcquireToken","BaseClientCreateTokenRequestHeaders","BrokerHandhshake","AcquireTokenByRefreshTokenInBroker","AcquireTokenByBroker","RefreshTokenClientExecuteTokenRequest","RefreshTokenClientAcquireToken","RefreshTokenClientAcquireTokenWithCachedRefreshToken","RefreshTokenClientAcquireTokenByRefreshToken","RefreshTokenClientCreateTokenRequestBody","AcquireTokenFromCache","AcquireTokenBySilentIframe","InitializeBaseRequest","InitializeSilentRequest","InitializeClientApplication","SilentIframeClientTokenHelper","SilentHandlerInitiateAuthRequest","SilentHandlerMonitorIframeForHash","SilentHandlerLoadFrame","StandardInteractionClientCreateAuthCodeClient","StandardInteractionClientGetClientConfiguration","StandardInteractionClientInitializeAuthorizationRequest","StandardInteractionClientInitializeAuthorizationCodeRequest","GetAuthCodeUrl","HandleCodeResponseFromServer","HandleCodeResponseFromHash","UpdateTokenEndpointAuthority","AuthClientAcquireToken","AuthClientExecuteTokenRequest","AuthClientCreateTokenRequestBody","AuthClientCreateQueryString","PopTokenGenerateCnf","PopTokenGenerateKid","HandleServerTokenResponse","AuthorityFactoryCreateDiscoveredInstance","AuthorityResolveEndpointsAsync","AuthorityGetCloudDiscoveryMetadataFromNetwork","AuthorityUpdateCloudDiscoveryMetadata","AuthorityGetEndpointMetadataFromNetwork","AuthorityUpdateEndpointMetadata","AuthorityUpdateMetadataWithRegionalInformation","RegionDiscoveryDetectRegion","RegionDiscoveryGetRegionFromIMDS","RegionDiscoveryGetCurrentVersion","AcquireTokenByCodeAsync","GetEndpointMetadataFromNetwork","GetCloudDiscoveryMetadataFromNetworkMeasurement","HandleRedirectPromiseMeasurement","UpdateCloudDiscoveryMetadataMeasurement","UsernamePasswordClientAcquireToken","NativeMessageHandlerHandshake","NativeGenerateAuthResult","PerformanceEventStatus","NotStarted","InProgress","Completed","IntFields","Set"],"sources":["../../../src/telemetry/performance/PerformanceEvent.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}