{"ast":null,"code":"/*! @azure/msal-common v14.0.2 2023-08-18 */\n'use strict';\n\nimport { StringUtils } from './StringUtils.mjs';\nimport { Constants } from './Constants.mjs';\nimport { ClientAuthError } from '../error/ClientAuthError.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Class which provides helpers for OAuth 2.0 protocol specific values\n */\nclass ProtocolUtils {\n  /**\n   * Appends user state with random guid, or returns random guid.\n   * @param userState\n   * @param randomGuid\n   */\n  static setRequestState(cryptoObj, userState, meta) {\n    const libraryState = ProtocolUtils.generateLibraryState(cryptoObj, meta);\n    return !StringUtils.isEmpty(userState) ? `${libraryState}${Constants.RESOURCE_DELIM}${userState}` : libraryState;\n  }\n  /**\n   * Generates the state value used by the common library.\n   * @param randomGuid\n   * @param cryptoObj\n   */\n  static generateLibraryState(cryptoObj, meta) {\n    if (!cryptoObj) {\n      throw ClientAuthError.createNoCryptoObjectError(\"generateLibraryState\");\n    }\n    // Create a state object containing a unique id and the timestamp of the request creation\n    const stateObj = {\n      id: cryptoObj.createNewGuid()\n    };\n    if (meta) {\n      stateObj.meta = meta;\n    }\n    const stateString = JSON.stringify(stateObj);\n    return cryptoObj.base64Encode(stateString);\n  }\n  /**\n   * Parses the state into the RequestStateObject, which contains the LibraryState info and the state passed by the user.\n   * @param state\n   * @param cryptoObj\n   */\n  static parseRequestState(cryptoObj, state) {\n    if (!cryptoObj) {\n      throw ClientAuthError.createNoCryptoObjectError(\"parseRequestState\");\n    }\n    if (StringUtils.isEmpty(state)) {\n      throw ClientAuthError.createInvalidStateError(state, \"Null, undefined or empty state\");\n    }\n    try {\n      // Split the state between library state and user passed state and decode them separately\n      const splitState = state.split(Constants.RESOURCE_DELIM);\n      const libraryState = splitState[0];\n      const userState = splitState.length > 1 ? splitState.slice(1).join(Constants.RESOURCE_DELIM) : Constants.EMPTY_STRING;\n      const libraryStateString = cryptoObj.base64Decode(libraryState);\n      const libraryStateObj = JSON.parse(libraryStateString);\n      return {\n        userRequestState: !StringUtils.isEmpty(userState) ? userState : Constants.EMPTY_STRING,\n        libraryState: libraryStateObj\n      };\n    } catch (e) {\n      throw ClientAuthError.createInvalidStateError(state, e);\n    }\n  }\n}\nexport { ProtocolUtils };","map":{"version":3,"names":["ProtocolUtils","setRequestState","cryptoObj","userState","meta","libraryState","generateLibraryState","StringUtils","isEmpty","Constants","RESOURCE_DELIM","ClientAuthError","createNoCryptoObjectError","stateObj","id","createNewGuid","stateString","JSON","stringify","base64Encode","parseRequestState","state","createInvalidStateError","splitState","split","length","slice","join","EMPTY_STRING","libraryStateString","base64Decode","libraryStateObj","parse","userRequestState","e"],"sources":["../../src/utils/ProtocolUtils.ts"],"sourcesContent":[null],"mappings":";;;;;;;AAAA;;;AAGG;AA2BH;;AAEG;MACUA,aAAa;EACtB;;;;AAIG;EACH,OAAOC,eAAeA,CAClBC,SAAkB,EAClBC,SAAkB,EAClBC,IAA6B;IAE7B,MAAMC,YAAY,GAAGL,aAAa,CAACM,oBAAoB,CACnDJ,SAAS,EACTE,IAAI,CACP;IACD,OAAO,CAACG,WAAW,CAACC,OAAO,CAACL,SAAS,CAAC,GAChC,GAAGE,YAAY,GAAGI,SAAS,CAACC,cAAiB,GAAAP,SAAW,KACxDE,YAAY;;EAGtB;;;;AAIG;EACH,OAAOC,oBAAoBA,CACvBJ,SAAkB,EAClBE,IAA6B;IAE7B,IAAI,CAACF,SAAS,EAAE;MACZ,MAAMS,eAAe,CAACC,yBAAyB,CAC3C,sBAAsB,CACzB;IACJ;;IAGD,MAAMC,QAAQ,GAAuB;MACjCC,EAAE,EAAEZ,SAAS,CAACa,aAAa;KAC9B;IAED,IAAIX,IAAI,EAAE;MACNS,QAAQ,CAACT,IAAI,GAAGA,IAAI;IACvB;IAED,MAAMY,WAAW,GAAGC,IAAI,CAACC,SAAS,CAACL,QAAQ,CAAC;IAE5C,OAAOX,SAAS,CAACiB,YAAY,CAACH,WAAW,CAAC;;EAG9C;;;;AAIG;EACH,OAAOI,iBAAiBA,CACpBlB,SAAkB,EAClBmB,KAAa;IAEb,IAAI,CAACnB,SAAS,EAAE;MACZ,MAAMS,eAAe,CAACC,yBAAyB,CAC3C,mBAAmB,CACtB;IACJ;IAED,IAAIL,WAAW,CAACC,OAAO,CAACa,KAAK,CAAC,EAAE;MAC5B,MAAMV,eAAe,CAACW,uBAAuB,CACzCD,KAAK,EACL,gCAAgC,CACnC;IACJ;IAED,IAAI;;MAEA,MAAME,UAAU,GAAGF,KAAK,CAACG,KAAK,CAACf,SAAS,CAACC,cAAc,CAAC;MACxD,MAAML,YAAY,GAAGkB,UAAU,CAAC,CAAC,CAAC;MAClC,MAAMpB,SAAS,GACXoB,UAAU,CAACE,MAAM,GAAG,CAAC,GACfF,UAAU,CAACG,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAClB,SAAS,CAACC,cAAc,CAAC,GAClDD,SAAS,CAACmB,YAAY;MAChC,MAAMC,kBAAkB,GAAG3B,SAAS,CAAC4B,YAAY,CAACzB,YAAY,CAAC;MAC/D,MAAM0B,eAAe,GAAGd,IAAI,CAACe,KAAK,CAC9BH,kBAAkB,CACC;MACvB,OAAO;QACHI,gBAAgB,EAAE,CAAC1B,WAAW,CAACC,OAAO,CAACL,SAAS,CAAC,GAC3CA,SAAS,GACTM,SAAS,CAACmB,YAAY;QAC5BvB,YAAY,EAAE0B;OACjB;IACJ,EAAC,OAAOG,CAAC,EAAE;MACR,MAAMvB,eAAe,CAACW,uBAAuB,CAACD,KAAK,EAAEa,CAAW,CAAC;IACpE;;AAER"},"metadata":{},"sourceType":"module","externalDependencies":[]}