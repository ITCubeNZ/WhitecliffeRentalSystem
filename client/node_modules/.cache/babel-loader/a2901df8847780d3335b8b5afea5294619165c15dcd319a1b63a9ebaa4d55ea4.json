{"ast":null,"code":"/*! @azure/msal-common v14.0.2 2023-08-18 */\n'use strict';\n\nimport { DEFAULT_CRYPTO_IMPLEMENTATION } from '../crypto/ICrypto.mjs';\nimport { AuthError } from '../error/AuthError.mjs';\nimport { Logger, LogLevel } from '../logger/Logger.mjs';\nimport { Constants } from '../utils/Constants.mjs';\nimport { version } from '../packageMetadata.mjs';\nimport { AzureCloudInstance } from '../authority/AuthorityOptions.mjs';\nimport { DefaultStorageClass } from '../cache/CacheManager.mjs';\nimport { ProtocolMode } from '../authority/ProtocolMode.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n// Token renewal offset default in seconds\nconst DEFAULT_TOKEN_RENEWAL_OFFSET_SEC = 300;\nconst DEFAULT_SYSTEM_OPTIONS = {\n  tokenRenewalOffsetSeconds: DEFAULT_TOKEN_RENEWAL_OFFSET_SEC,\n  preventCorsPreflight: false\n};\nconst DEFAULT_LOGGER_IMPLEMENTATION = {\n  loggerCallback: () => {\n    // allow users to not set loggerCallback\n  },\n  piiLoggingEnabled: false,\n  logLevel: LogLevel.Info,\n  correlationId: Constants.EMPTY_STRING\n};\nconst DEFAULT_CACHE_OPTIONS = {\n  claimsBasedCachingEnabled: false\n};\nconst DEFAULT_NETWORK_IMPLEMENTATION = {\n  async sendGetRequestAsync() {\n    const notImplErr = \"Network interface - sendGetRequestAsync() has not been implemented\";\n    throw AuthError.createUnexpectedError(notImplErr);\n  },\n  async sendPostRequestAsync() {\n    const notImplErr = \"Network interface - sendPostRequestAsync() has not been implemented\";\n    throw AuthError.createUnexpectedError(notImplErr);\n  }\n};\nconst DEFAULT_LIBRARY_INFO = {\n  sku: Constants.SKU,\n  version: version,\n  cpu: Constants.EMPTY_STRING,\n  os: Constants.EMPTY_STRING\n};\nconst DEFAULT_CLIENT_CREDENTIALS = {\n  clientSecret: Constants.EMPTY_STRING,\n  clientAssertion: undefined\n};\nconst DEFAULT_AZURE_CLOUD_OPTIONS = {\n  azureCloudInstance: AzureCloudInstance.None,\n  tenant: `${Constants.DEFAULT_COMMON_TENANT}`\n};\nconst DEFAULT_TELEMETRY_OPTIONS = {\n  application: {\n    appName: \"\",\n    appVersion: \"\"\n  }\n};\n/**\r\n * Function that sets the default options when not explicitly configured from app developer\r\n *\r\n * @param Configuration\r\n *\r\n * @returns Configuration\r\n */\nfunction buildClientConfiguration({\n  authOptions: userAuthOptions,\n  systemOptions: userSystemOptions,\n  loggerOptions: userLoggerOption,\n  cacheOptions: userCacheOptions,\n  storageInterface: storageImplementation,\n  networkInterface: networkImplementation,\n  cryptoInterface: cryptoImplementation,\n  clientCredentials: clientCredentials,\n  libraryInfo: libraryInfo,\n  telemetry: telemetry,\n  serverTelemetryManager: serverTelemetryManager,\n  persistencePlugin: persistencePlugin,\n  serializableCache: serializableCache\n}) {\n  const loggerOptions = {\n    ...DEFAULT_LOGGER_IMPLEMENTATION,\n    ...userLoggerOption\n  };\n  return {\n    authOptions: buildAuthOptions(userAuthOptions),\n    systemOptions: {\n      ...DEFAULT_SYSTEM_OPTIONS,\n      ...userSystemOptions\n    },\n    loggerOptions: loggerOptions,\n    cacheOptions: {\n      ...DEFAULT_CACHE_OPTIONS,\n      ...userCacheOptions\n    },\n    storageInterface: storageImplementation || new DefaultStorageClass(userAuthOptions.clientId, DEFAULT_CRYPTO_IMPLEMENTATION, new Logger(loggerOptions)),\n    networkInterface: networkImplementation || DEFAULT_NETWORK_IMPLEMENTATION,\n    cryptoInterface: cryptoImplementation || DEFAULT_CRYPTO_IMPLEMENTATION,\n    clientCredentials: clientCredentials || DEFAULT_CLIENT_CREDENTIALS,\n    libraryInfo: {\n      ...DEFAULT_LIBRARY_INFO,\n      ...libraryInfo\n    },\n    telemetry: {\n      ...DEFAULT_TELEMETRY_OPTIONS,\n      ...telemetry\n    },\n    serverTelemetryManager: serverTelemetryManager || null,\n    persistencePlugin: persistencePlugin || null,\n    serializableCache: serializableCache || null\n  };\n}\n/**\r\n * Construct authoptions from the client and platform passed values\r\n * @param authOptions\r\n */\nfunction buildAuthOptions(authOptions) {\n  return {\n    clientCapabilities: [],\n    azureCloudOptions: DEFAULT_AZURE_CLOUD_OPTIONS,\n    skipAuthorityMetadataCache: false,\n    ...authOptions\n  };\n}\n/**\r\n * Returns true if config has protocolMode set to ProtocolMode.OIDC, false otherwise\r\n * @param ClientConfiguration\r\n */\nfunction isOidcProtocolMode(config) {\n  return config.authOptions.authority.options.protocolMode === ProtocolMode.OIDC;\n}\nexport { DEFAULT_SYSTEM_OPTIONS, buildClientConfiguration, isOidcProtocolMode };","map":{"version":3,"names":["DEFAULT_TOKEN_RENEWAL_OFFSET_SEC","DEFAULT_SYSTEM_OPTIONS","tokenRenewalOffsetSeconds","preventCorsPreflight","DEFAULT_LOGGER_IMPLEMENTATION","loggerCallback","piiLoggingEnabled","logLevel","LogLevel","Info","correlationId","Constants","EMPTY_STRING","DEFAULT_CACHE_OPTIONS","claimsBasedCachingEnabled","DEFAULT_NETWORK_IMPLEMENTATION","sendGetRequestAsync","notImplErr","AuthError","createUnexpectedError","sendPostRequestAsync","DEFAULT_LIBRARY_INFO","sku","SKU","version","cpu","os","DEFAULT_CLIENT_CREDENTIALS","clientSecret","clientAssertion","undefined","DEFAULT_AZURE_CLOUD_OPTIONS","azureCloudInstance","AzureCloudInstance","None","tenant","DEFAULT_COMMON_TENANT","DEFAULT_TELEMETRY_OPTIONS","application","appName","appVersion","buildClientConfiguration","authOptions","userAuthOptions","systemOptions","userSystemOptions","loggerOptions","userLoggerOption","cacheOptions","userCacheOptions","storageInterface","storageImplementation","networkInterface","networkImplementation","cryptoInterface","cryptoImplementation","clientCredentials","libraryInfo","telemetry","serverTelemetryManager","persistencePlugin","serializableCache","buildAuthOptions","DefaultStorageClass","clientId","DEFAULT_CRYPTO_IMPLEMENTATION","Logger","clientCapabilities","azureCloudOptions","skipAuthorityMetadataCache","isOidcProtocolMode","config","authority","options","protocolMode","ProtocolMode","OIDC"],"sources":["../../src/config/ClientConfiguration.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;AAAA;;;AAGG;AAiBH;AACA,MAAMA,gCAAgC,GAAG,GAAG;AA0I/B,MAAAC,sBAAsB,GAA4B;EAC3DC,yBAAyB,EAAEF,gCAAgC;EAC3DG,oBAAoB,EAAE;;AAG1B,MAAMC,6BAA6B,GAA4B;EAC3DC,cAAc,EAAEA,CAAA,KAAK;;GAEpB;EACDC,iBAAiB,EAAE,KAAK;EACxBC,QAAQ,EAAEC,QAAQ,CAACC,IAAI;EACvBC,aAAa,EAAEC,SAAS,CAACC;CAC5B;AAED,MAAMC,qBAAqB,GAA2B;EAClDC,yBAAyB,EAAE;CAC9B;AAED,MAAMC,8BAA8B,GAAmB;EACnD,MAAMC,mBAAmBA,CAAA;IACrB,MAAMC,UAAU,GACZ,oEAAoE;IACxE,MAAMC,SAAS,CAACC,qBAAqB,CAACF,UAAU,CAAC;GACpD;EACD,MAAMG,oBAAoBA,CAAA;IACtB,MAAMH,UAAU,GACZ,qEAAqE;IACzE,MAAMC,SAAS,CAACC,qBAAqB,CAACF,UAAU,CAAC;;CAExD;AAED,MAAMI,oBAAoB,GAAgB;EACtCC,GAAG,EAAEX,SAAS,CAACY,GAAG;EAClBC,OAAO,EAAEA,OAAO;EAChBC,GAAG,EAAEd,SAAS,CAACC,YAAY;EAC3Bc,EAAE,EAAEf,SAAS,CAACC;CACjB;AAED,MAAMe,0BAA0B,GAAsB;EAClDC,YAAY,EAAEjB,SAAS,CAACC,YAAY;EACpCiB,eAAe,EAAEC;CACpB;AAED,MAAMC,2BAA2B,GAAsB;EACnDC,kBAAkB,EAAEC,kBAAkB,CAACC,IAAI;EAC3CC,MAAM,EAAE,GAAGxB,SAAS,CAACyB,qBAAuB;CAC/C;AAED,MAAMC,yBAAyB,GAA+B;EAC1DC,WAAW,EAAE;IACTC,OAAO,EAAE,EAAE;IACXC,UAAU,EAAE;EACf;CACJ;AAED;;;;;;AAMG;AACG,SAAUC,wBAAwBA,CAAC;EACrCC,WAAW,EAAEC,eAAe;EAC5BC,aAAa,EAAEC,iBAAiB;EAChCC,aAAa,EAAEC,gBAAgB;EAC/BC,YAAY,EAAEC,gBAAgB;EAC9BC,gBAAgB,EAAEC,qBAAqB;EACvCC,gBAAgB,EAAEC,qBAAqB;EACvCC,eAAe,EAAEC,oBAAoB;EACrCC,iBAAiB,EAAEA,iBAAiB;EACpCC,WAAW,EAAEA,WAAW;EACxBC,SAAS,EAAEA,SAAS;EACpBC,sBAAsB,EAAEA,sBAAsB;EAC9CC,iBAAiB,EAAEA,iBAAiB;EACpCC,iBAAiB,EAAEA;AAAiB,CAClB;EAClB,MAAMf,aAAa,GAAG;IAClB,GAAG1C,6BAA6B;IAChC,GAAG2C;GACN;EAED,OAAO;IACHL,WAAW,EAAEoB,gBAAgB,CAACnB,eAAe,CAAC;IAC9CC,aAAa,EAAE;MAAE,GAAG3C,sBAAsB;MAAE,GAAG4C;IAAiB,CAAE;IAClEC,aAAa,EAAEA,aAAa;IAC5BE,YAAY,EAAE;MAAE,GAAGnC,qBAAqB;MAAE,GAAGoC;IAAgB,CAAE;IAC/DC,gBAAgB,EACZC,qBAAqB,IACrB,IAAIY,mBAAmB,CACnBpB,eAAe,CAACqB,QAAQ,EACxBC,6BAA6B,EAC7B,IAAIC,MAAM,CAACpB,aAAa,CAAC,CAC5B;IACLM,gBAAgB,EACZC,qBAAqB,IAAItC,8BAA8B;IAC3DuC,eAAe,EAAEC,oBAAoB,IAAIU,6BAA6B;IACtET,iBAAiB,EAAEA,iBAAiB,IAAI7B,0BAA0B;IAClE8B,WAAW,EAAE;MAAE,GAAGpC,oBAAoB;MAAE,GAAGoC;IAAW,CAAE;IACxDC,SAAS,EAAE;MAAE,GAAGrB,yBAAyB;MAAE,GAAGqB;IAAS,CAAE;IACzDC,sBAAsB,EAAEA,sBAAsB,IAAI,IAAI;IACtDC,iBAAiB,EAAEA,iBAAiB,IAAI,IAAI;IAC5CC,iBAAiB,EAAEA,iBAAiB,IAAI;GAC3C;AACL;AAEA;;;AAGG;AACH,SAASC,gBAAgBA,CAACpB,WAAwB;EAC9C,OAAO;IACHyB,kBAAkB,EAAE,EAAE;IACtBC,iBAAiB,EAAErC,2BAA2B;IAC9CsC,0BAA0B,EAAE,KAAK;IACjC,GAAG3B;GACN;AACL;AAEA;;;AAGG;AACG,SAAU4B,kBAAkBA,CAACC,MAA2B;EAC1D,OACIA,MAAM,CAAC7B,WAAW,CAAC8B,SAAS,CAACC,OAAO,CAACC,YAAY,KAAKC,YAAY,CAACC,IAAI;AAE/E"},"metadata":{},"sourceType":"module","externalDependencies":[]}