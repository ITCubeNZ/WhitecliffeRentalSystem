{"ast":null,"code":"/*! @azure/msal-browser v3.0.2 2023-08-18 */\n'use strict';\n\nimport { Constants } from '@azure/msal-common';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Utility functions for strings in a browser. See here for implementation details:\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_2_%E2%80%93_JavaScript's_UTF-16_%3E_UTF-8_%3E_base64\n */\nclass BrowserStringUtils {\n  /**\n   * Converts string to Uint8Array\n   * @param sDOMStr\n   */\n  static stringToUtf8Arr(sDOMStr) {\n    let nChr;\n    let nArrLen = 0;\n    const nStrLen = sDOMStr.length;\n    /* mapping... */\n    for (let nMapIdx = 0; nMapIdx < nStrLen; nMapIdx++) {\n      nChr = sDOMStr.charCodeAt(nMapIdx);\n      nArrLen += nChr < 0x80 ? 1 : nChr < 0x800 ? 2 : nChr < 0x10000 ? 3 : nChr < 0x200000 ? 4 : nChr < 0x4000000 ? 5 : 6;\n    }\n    const aBytes = new Uint8Array(nArrLen);\n    /* transcription... */\n    for (let nIdx = 0, nChrIdx = 0; nIdx < nArrLen; nChrIdx++) {\n      nChr = sDOMStr.charCodeAt(nChrIdx);\n      if (nChr < 128) {\n        /* one byte */\n        aBytes[nIdx++] = nChr;\n      } else if (nChr < 0x800) {\n        /* two bytes */\n        aBytes[nIdx++] = 192 + (nChr >>> 6);\n        aBytes[nIdx++] = 128 + (nChr & 63);\n      } else if (nChr < 0x10000) {\n        /* three bytes */\n        aBytes[nIdx++] = 224 + (nChr >>> 12);\n        aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\n        aBytes[nIdx++] = 128 + (nChr & 63);\n      } else if (nChr < 0x200000) {\n        /* four bytes */\n        aBytes[nIdx++] = 240 + (nChr >>> 18);\n        aBytes[nIdx++] = 128 + (nChr >>> 12 & 63);\n        aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\n        aBytes[nIdx++] = 128 + (nChr & 63);\n      } else if (nChr < 0x4000000) {\n        /* five bytes */\n        aBytes[nIdx++] = 248 + (nChr >>> 24);\n        aBytes[nIdx++] = 128 + (nChr >>> 18 & 63);\n        aBytes[nIdx++] = 128 + (nChr >>> 12 & 63);\n        aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\n        aBytes[nIdx++] = 128 + (nChr & 63);\n      } /* if (nChr <= 0x7fffffff) */else {\n        /* six bytes */\n        aBytes[nIdx++] = 252 + (nChr >>> 30);\n        aBytes[nIdx++] = 128 + (nChr >>> 24 & 63);\n        aBytes[nIdx++] = 128 + (nChr >>> 18 & 63);\n        aBytes[nIdx++] = 128 + (nChr >>> 12 & 63);\n        aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\n        aBytes[nIdx++] = 128 + (nChr & 63);\n      }\n    }\n    return aBytes;\n  }\n  /**\n   * Converts Uint8Array to a string\n   * @param aBytes\n   */\n  static utf8ArrToString(aBytes) {\n    let sView = Constants.EMPTY_STRING;\n    for (let nPart, nLen = aBytes.length, nIdx = 0; nIdx < nLen; nIdx++) {\n      nPart = aBytes[nIdx];\n      sView += String.fromCharCode(nPart > 251 && nPart < 254 && nIdx + 5 < nLen /* six bytes */ ? /* (nPart - 252 << 30) may be not so safe in ECMAScript! So...: */\n      (nPart - 252) * 1073741824 + (aBytes[++nIdx] - 128 << 24) + (aBytes[++nIdx] - 128 << 18) + (aBytes[++nIdx] - 128 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128 : nPart > 247 && nPart < 252 && nIdx + 4 < nLen /* five bytes */ ? (nPart - 248 << 24) + (aBytes[++nIdx] - 128 << 18) + (aBytes[++nIdx] - 128 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128 : nPart > 239 && nPart < 248 && nIdx + 3 < nLen /* four bytes */ ? (nPart - 240 << 18) + (aBytes[++nIdx] - 128 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128 : nPart > 223 && nPart < 240 && nIdx + 2 < nLen /* three bytes */ ? (nPart - 224 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128 : nPart > 191 && nPart < 224 && nIdx + 1 < nLen /* two bytes */ ? (nPart - 192 << 6) + aBytes[++nIdx] - 128 : /* nPart < 127 ? */ /* one byte */\n      nPart);\n    }\n    return sView;\n  }\n  /**\n   * Returns stringified jwk.\n   * @param jwk\n   */\n  static getSortedObjectString(obj) {\n    return JSON.stringify(obj, Object.keys(obj).sort());\n  }\n}\nexport { BrowserStringUtils };","map":{"version":3,"names":["BrowserStringUtils","stringToUtf8Arr","sDOMStr","nChr","nArrLen","nStrLen","length","nMapIdx","charCodeAt","aBytes","Uint8Array","nIdx","nChrIdx","utf8ArrToString","sView","Constants","EMPTY_STRING","nPart","nLen","String","fromCharCode","getSortedObjectString","obj","JSON","stringify","Object","keys","sort"],"sources":["../../src/utils/BrowserStringUtils.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}