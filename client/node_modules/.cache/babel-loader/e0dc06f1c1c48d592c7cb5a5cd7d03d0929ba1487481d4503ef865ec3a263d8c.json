{"ast":null,"code":"/*! @azure/msal-browser v3.0.2 2023-08-18 */\n'use strict';\n\nimport { PerformanceEvents, Constants, AuthError } from '@azure/msal-common';\nimport { StandardInteractionClient } from './StandardInteractionClient.mjs';\nimport { BrowserAuthError } from '../error/BrowserAuthError.mjs';\nimport { InteractionType } from '../utils/BrowserConstants.mjs';\nimport { SilentHandler } from '../interaction_handler/SilentHandler.mjs';\nimport { HybridSpaAuthorizationCodeClient } from './HybridSpaAuthorizationCodeClient.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\nclass SilentAuthCodeClient extends StandardInteractionClient {\n  constructor(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, apiId, performanceClient, nativeMessageHandler, correlationId) {\n    super(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, performanceClient, nativeMessageHandler, correlationId);\n    this.apiId = apiId;\n  }\n  /**\r\n   * Acquires a token silently by redeeming an authorization code against the /token endpoint\r\n   * @param request\r\n   */\n  async acquireToken(request) {\n    this.logger.trace(\"SilentAuthCodeClient.acquireToken called\");\n    // Auth code payload is required\n    if (!request.code) {\n      throw BrowserAuthError.createAuthCodeRequiredError();\n    }\n    // Create silent request\n    this.performanceClient.setPreQueueTime(PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest, request.correlationId);\n    const silentRequest = await this.initializeAuthorizationRequest(request, InteractionType.Silent);\n    this.browserStorage.updateCacheEntries(silentRequest.state, silentRequest.nonce, silentRequest.authority, silentRequest.loginHint || Constants.EMPTY_STRING, silentRequest.account || null);\n    const serverTelemetryManager = this.initializeServerTelemetryManager(this.apiId);\n    try {\n      // Create auth code request (PKCE not needed)\n      const authCodeRequest = {\n        ...silentRequest,\n        code: request.code\n      };\n      // Initialize the client\n      this.performanceClient.setPreQueueTime(PerformanceEvents.StandardInteractionClientGetClientConfiguration, request.correlationId);\n      const clientConfig = await this.getClientConfiguration(serverTelemetryManager, silentRequest.authority);\n      const authClient = new HybridSpaAuthorizationCodeClient(clientConfig);\n      this.logger.verbose(\"Auth code client created\");\n      // Create silent handler\n      const silentHandler = new SilentHandler(authClient, this.browserStorage, authCodeRequest, this.logger, this.config.system, this.performanceClient);\n      // Handle auth code parameters from request\n      return silentHandler.handleCodeResponseFromServer({\n        code: request.code,\n        msgraph_host: request.msGraphHost,\n        cloud_graph_host_name: request.cloudGraphHostName,\n        cloud_instance_host_name: request.cloudInstanceHostName\n      }, silentRequest.state, authClient.authority, this.networkClient, false);\n    } catch (e) {\n      if (e instanceof AuthError) {\n        e.setCorrelationId(this.correlationId);\n        serverTelemetryManager.cacheFailedRequest(e);\n      }\n      this.browserStorage.cleanRequestByState(silentRequest.state);\n      throw e;\n    }\n  }\n  /**\r\n   * Currently Unsupported\r\n   */\n  logout() {\n    // Synchronous so we must reject\n    return Promise.reject(BrowserAuthError.createSilentLogoutUnsupportedError());\n  }\n}\nexport { SilentAuthCodeClient };","map":{"version":3,"names":["SilentAuthCodeClient","StandardInteractionClient","constructor","config","storageImpl","browserCrypto","logger","eventHandler","navigationClient","apiId","performanceClient","nativeMessageHandler","correlationId","acquireToken","request","trace","code","BrowserAuthError","createAuthCodeRequiredError","setPreQueueTime","PerformanceEvents","StandardInteractionClientInitializeAuthorizationRequest","silentRequest","initializeAuthorizationRequest","InteractionType","Silent","browserStorage","updateCacheEntries","state","nonce","authority","loginHint","Constants","EMPTY_STRING","account","serverTelemetryManager","initializeServerTelemetryManager","authCodeRequest","StandardInteractionClientGetClientConfiguration","clientConfig","getClientConfiguration","authClient","HybridSpaAuthorizationCodeClient","verbose","silentHandler","SilentHandler","system","handleCodeResponseFromServer","msgraph_host","msGraphHost","cloud_graph_host_name","cloudGraphHostName","cloud_instance_host_name","cloudInstanceHostName","networkClient","e","AuthError","setCorrelationId","cacheFailedRequest","cleanRequestByState","logout","Promise","reject","createSilentLogoutUnsupportedError"],"sources":["../../src/interaction_client/SilentAuthCodeClient.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}