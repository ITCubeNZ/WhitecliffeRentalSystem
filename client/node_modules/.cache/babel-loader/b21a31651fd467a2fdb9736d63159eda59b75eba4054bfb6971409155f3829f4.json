{"ast":null,"code":"/*! @azure/msal-common v14.0.2 2023-08-18 */\n'use strict';\n\nimport { CredentialEntity } from './CredentialEntity.mjs';\nimport { CredentialType } from '../../utils/Constants.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * ID_TOKEN Cache\n *\n * Key:Value Schema:\n *\n * Key Example: uid.utid-login.microsoftonline.com-idtoken-clientId-contoso.com-\n *\n * Value Schema:\n * {\n *      homeAccountId: home account identifier for the auth scheme,\n *      environment: entity that issued the token, represented as a full host\n *      credentialType: Type of credential as a string, can be one of the following: RefreshToken, AccessToken, IdToken, Password, Cookie, Certificate, Other\n *      clientId: client ID of the application\n *      secret: Actual credential as a string\n *      realm: Full tenant or organizational identifier that the account belongs to\n * }\n */\nclass IdTokenEntity extends CredentialEntity {\n  /**\n   * Create IdTokenEntity\n   * @param homeAccountId\n   * @param authenticationResult\n   * @param clientId\n   * @param authority\n   */\n  static createIdTokenEntity(homeAccountId, environment, idToken, clientId, tenantId) {\n    const idTokenEntity = new IdTokenEntity();\n    idTokenEntity.credentialType = CredentialType.ID_TOKEN;\n    idTokenEntity.homeAccountId = homeAccountId;\n    idTokenEntity.environment = environment;\n    idTokenEntity.clientId = clientId;\n    idTokenEntity.secret = idToken;\n    idTokenEntity.realm = tenantId;\n    return idTokenEntity;\n  }\n  /**\n   * Validates an entity: checks for all expected params\n   * @param entity\n   */\n  static isIdTokenEntity(entity) {\n    if (!entity) {\n      return false;\n    }\n    return entity.hasOwnProperty(\"homeAccountId\") && entity.hasOwnProperty(\"environment\") && entity.hasOwnProperty(\"credentialType\") && entity.hasOwnProperty(\"realm\") && entity.hasOwnProperty(\"clientId\") && entity.hasOwnProperty(\"secret\") && entity[\"credentialType\"] === CredentialType.ID_TOKEN;\n  }\n}\nexport { IdTokenEntity };","map":{"version":3,"names":["IdTokenEntity","CredentialEntity","createIdTokenEntity","homeAccountId","environment","idToken","clientId","tenantId","idTokenEntity","credentialType","CredentialType","ID_TOKEN","secret","realm","isIdTokenEntity","entity","hasOwnProperty"],"sources":["../../../src/cache/entities/IdTokenEntity.ts"],"sourcesContent":[null],"mappings":";;;;;;AAAA;;;AAGG;AAKH;;;;;;;;;;;;;;;;AAgBG;AACG,MAAOA,aAAc,SAAQC,gBAAgB;EAG/C;;;;;;AAMG;EACH,OAAOC,mBAAmBA,CACtBC,aAAqB,EACrBC,WAAmB,EACnBC,OAAe,EACfC,QAAgB,EAChBC,QAAgB;IAEhB,MAAMC,aAAa,GAAG,IAAIR,aAAa,EAAE;IAEzCQ,aAAa,CAACC,cAAc,GAAGC,cAAc,CAACC,QAAQ;IACtDH,aAAa,CAACL,aAAa,GAAGA,aAAa;IAC3CK,aAAa,CAACJ,WAAW,GAAGA,WAAW;IACvCI,aAAa,CAACF,QAAQ,GAAGA,QAAQ;IACjCE,aAAa,CAACI,MAAM,GAAGP,OAAO;IAC9BG,aAAa,CAACK,KAAK,GAAGN,QAAQ;IAE9B,OAAOC,aAAa;;EAGxB;;;AAGG;EACH,OAAOM,eAAeA,CAACC,MAAc;IACjC,IAAI,CAACA,MAAM,EAAE;MACT,OAAO,KAAK;IACf;IAED,OACIA,MAAM,CAACC,cAAc,CAAC,eAAe,CAAC,IACtCD,MAAM,CAACC,cAAc,CAAC,aAAa,CAAC,IACpCD,MAAM,CAACC,cAAc,CAAC,gBAAgB,CAAC,IACvCD,MAAM,CAACC,cAAc,CAAC,OAAO,CAAC,IAC9BD,MAAM,CAACC,cAAc,CAAC,UAAU,CAAC,IACjCD,MAAM,CAACC,cAAc,CAAC,QAAQ,CAAC,IAC/BD,MAAM,CAAC,gBAAgB,CAAC,KAAKL,cAAc,CAACC,QAAQ;;AAG/D"},"metadata":{},"sourceType":"module","externalDependencies":[]}