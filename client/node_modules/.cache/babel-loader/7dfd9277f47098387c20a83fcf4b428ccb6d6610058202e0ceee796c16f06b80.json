{"ast":null,"code":"/*! @azure/msal-browser v3.0.2 2023-08-18 */\n'use strict';\n\nimport { PerformanceEvents, StringUtils, PromptValue, Constants, AuthError, UrlString, ProtocolUtils } from '@azure/msal-common';\nimport { StandardInteractionClient } from './StandardInteractionClient.mjs';\nimport { BrowserAuthError } from '../error/BrowserAuthError.mjs';\nimport { InteractionType } from '../utils/BrowserConstants.mjs';\nimport { SilentHandler } from '../interaction_handler/SilentHandler.mjs';\nimport { NativeMessageHandler } from '../broker/nativeBroker/NativeMessageHandler.mjs';\nimport { NativeInteractionClient } from './NativeInteractionClient.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\nclass SilentIframeClient extends StandardInteractionClient {\n  constructor(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, apiId, performanceClient, nativeStorageImpl, nativeMessageHandler, correlationId) {\n    super(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, performanceClient, nativeMessageHandler, correlationId);\n    this.apiId = apiId;\n    this.nativeStorage = nativeStorageImpl;\n  }\n  /**\r\n   * Acquires a token silently by opening a hidden iframe to the /authorize endpoint with prompt=none or prompt=no_session\r\n   * @param request\r\n   */\n  async acquireToken(request) {\n    this.performanceClient.addQueueMeasurement(PerformanceEvents.SilentIframeClientAcquireToken, request.correlationId);\n    this.logger.verbose(\"acquireTokenByIframe called\");\n    const acquireTokenMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.SilentIframeClientAcquireToken, request.correlationId);\n    // Check that we have some SSO data\n    if (StringUtils.isEmpty(request.loginHint) && StringUtils.isEmpty(request.sid) && (!request.account || StringUtils.isEmpty(request.account.username))) {\n      this.logger.warning(\"No user hint provided. The authorization server may need more information to complete this request.\");\n    }\n    // Check that prompt is set to none or no_session, throw error if it is set to anything else.\n    if (request.prompt && request.prompt !== PromptValue.NONE && request.prompt !== PromptValue.NO_SESSION) {\n      acquireTokenMeasurement.end({\n        success: false\n      });\n      throw BrowserAuthError.createSilentPromptValueError(request.prompt);\n    }\n    // Create silent request\n    this.performanceClient.setPreQueueTime(PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest, request.correlationId);\n    const silentRequest = await this.initializeAuthorizationRequest({\n      ...request,\n      prompt: request.prompt || PromptValue.NONE\n    }, InteractionType.Silent);\n    this.browserStorage.updateCacheEntries(silentRequest.state, silentRequest.nonce, silentRequest.authority, silentRequest.loginHint || Constants.EMPTY_STRING, silentRequest.account || null);\n    const serverTelemetryManager = this.initializeServerTelemetryManager(this.apiId);\n    try {\n      // Initialize the client\n      this.performanceClient.setPreQueueTime(PerformanceEvents.StandardInteractionClientCreateAuthCodeClient, request.correlationId);\n      const authClient = await this.createAuthCodeClient(serverTelemetryManager, silentRequest.authority, silentRequest.azureCloudOptions);\n      this.logger.verbose(\"Auth code client created\");\n      this.performanceClient.setPreQueueTime(PerformanceEvents.SilentIframeClientTokenHelper, request.correlationId);\n      return await this.silentTokenHelper(authClient, silentRequest).then(result => {\n        acquireTokenMeasurement.end({\n          success: true,\n          fromCache: false,\n          requestId: result.requestId\n        });\n        return result;\n      });\n    } catch (e) {\n      if (e instanceof AuthError) {\n        e.setCorrelationId(this.correlationId);\n        serverTelemetryManager.cacheFailedRequest(e);\n      }\n      this.browserStorage.cleanRequestByState(silentRequest.state);\n      acquireTokenMeasurement.end({\n        errorCode: e instanceof AuthError && e.errorCode || undefined,\n        subErrorCode: e instanceof AuthError && e.subError || undefined,\n        success: false\n      });\n      throw e;\n    }\n  }\n  /**\r\n   * Currently Unsupported\r\n   */\n  logout() {\n    // Synchronous so we must reject\n    return Promise.reject(BrowserAuthError.createSilentLogoutUnsupportedError());\n  }\n  /**\r\n   * Helper which acquires an authorization code silently using a hidden iframe from given url\r\n   * using the scopes requested as part of the id, and exchanges the code for a set of OAuth tokens.\r\n   * @param navigateUrl\r\n   * @param userRequestScopes\r\n   */\n  async silentTokenHelper(authClient, silentRequest) {\n    this.performanceClient.addQueueMeasurement(PerformanceEvents.SilentIframeClientTokenHelper, silentRequest.correlationId);\n    // Create auth code request and generate PKCE params\n    this.performanceClient.setPreQueueTime(PerformanceEvents.StandardInteractionClientInitializeAuthorizationCodeRequest, silentRequest.correlationId);\n    const authCodeRequest = await this.initializeAuthorizationCodeRequest(silentRequest);\n    // Create authorize request url\n    this.performanceClient.setPreQueueTime(PerformanceEvents.GetAuthCodeUrl, silentRequest.correlationId);\n    const navigateUrl = await authClient.getAuthCodeUrl({\n      ...silentRequest,\n      nativeBroker: NativeMessageHandler.isNativeAvailable(this.config, this.logger, this.nativeMessageHandler, silentRequest.authenticationScheme)\n    });\n    // Create silent handler\n    const silentHandler = new SilentHandler(authClient, this.browserStorage, authCodeRequest, this.logger, this.config.system, this.performanceClient);\n    // Get the frame handle for the silent request\n    this.performanceClient.setPreQueueTime(PerformanceEvents.SilentHandlerInitiateAuthRequest, silentRequest.correlationId);\n    const msalFrame = await silentHandler.initiateAuthRequest(navigateUrl);\n    // Monitor the window for the hash. Return the string value and close the popup when the hash is received. Default timeout is 60 seconds.\n    this.performanceClient.setPreQueueTime(PerformanceEvents.SilentHandlerMonitorIframeForHash, silentRequest.correlationId);\n    const hash = await silentHandler.monitorIframeForHash(msalFrame, this.config.system.iframeHashTimeout);\n    // Deserialize hash fragment response parameters.\n    const serverParams = UrlString.getDeserializedHash(hash);\n    const state = this.validateAndExtractStateFromHash(serverParams, InteractionType.Silent, authCodeRequest.correlationId);\n    if (serverParams.accountId) {\n      this.logger.verbose(\"Account id found in hash, calling WAM for token\");\n      if (!this.nativeMessageHandler) {\n        throw BrowserAuthError.createNativeConnectionNotEstablishedError();\n      }\n      const nativeInteractionClient = new NativeInteractionClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, this.apiId, this.performanceClient, this.nativeMessageHandler, serverParams.accountId, this.browserStorage, this.correlationId);\n      const {\n        userRequestState\n      } = ProtocolUtils.parseRequestState(this.browserCrypto, state);\n      return nativeInteractionClient.acquireToken({\n        ...silentRequest,\n        state: userRequestState,\n        prompt: silentRequest.prompt || PromptValue.NONE\n      }).finally(() => {\n        this.browserStorage.cleanRequestByState(state);\n      });\n    }\n    // Handle response from hash string\n    this.performanceClient.setPreQueueTime(PerformanceEvents.HandleCodeResponseFromHash, silentRequest.correlationId);\n    return silentHandler.handleCodeResponseFromHash(hash, state, authClient.authority, this.networkClient);\n  }\n}\nexport { SilentIframeClient };","map":{"version":3,"names":["SilentIframeClient","StandardInteractionClient","constructor","config","storageImpl","browserCrypto","logger","eventHandler","navigationClient","apiId","performanceClient","nativeStorageImpl","nativeMessageHandler","correlationId","nativeStorage","acquireToken","request","addQueueMeasurement","PerformanceEvents","SilentIframeClientAcquireToken","verbose","acquireTokenMeasurement","startMeasurement","StringUtils","isEmpty","loginHint","sid","account","username","warning","prompt","PromptValue","NONE","NO_SESSION","end","success","BrowserAuthError","createSilentPromptValueError","setPreQueueTime","StandardInteractionClientInitializeAuthorizationRequest","silentRequest","initializeAuthorizationRequest","InteractionType","Silent","browserStorage","updateCacheEntries","state","nonce","authority","Constants","EMPTY_STRING","serverTelemetryManager","initializeServerTelemetryManager","StandardInteractionClientCreateAuthCodeClient","authClient","createAuthCodeClient","azureCloudOptions","SilentIframeClientTokenHelper","silentTokenHelper","then","result","fromCache","requestId","e","AuthError","setCorrelationId","cacheFailedRequest","cleanRequestByState","errorCode","undefined","subErrorCode","subError","logout","Promise","reject","createSilentLogoutUnsupportedError","StandardInteractionClientInitializeAuthorizationCodeRequest","authCodeRequest","initializeAuthorizationCodeRequest","GetAuthCodeUrl","navigateUrl","getAuthCodeUrl","nativeBroker","NativeMessageHandler","isNativeAvailable","authenticationScheme","silentHandler","SilentHandler","system","SilentHandlerInitiateAuthRequest","msalFrame","initiateAuthRequest","SilentHandlerMonitorIframeForHash","hash","monitorIframeForHash","iframeHashTimeout","serverParams","UrlString","getDeserializedHash","validateAndExtractStateFromHash","accountId","createNativeConnectionNotEstablishedError","nativeInteractionClient","NativeInteractionClient","userRequestState","ProtocolUtils","parseRequestState","finally","HandleCodeResponseFromHash","handleCodeResponseFromHash","networkClient"],"sources":["../../src/interaction_client/SilentIframeClient.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}