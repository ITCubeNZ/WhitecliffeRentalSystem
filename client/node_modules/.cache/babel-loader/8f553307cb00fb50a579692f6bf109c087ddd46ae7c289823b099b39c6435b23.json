{"ast":null,"code":"/*! @azure/msal-common v14.0.2 2023-08-18 */\n'use strict';\n\nimport { Constants } from '../utils/Constants.mjs';\nimport { AuthError } from './AuthError.mjs';\n\n/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * InteractionRequiredServerErrorMessage contains string constants used by error codes and messages returned by the server indicating interaction is required\n */\nconst InteractionRequiredServerErrorMessage = [\"interaction_required\", \"consent_required\", \"login_required\"];\nconst InteractionRequiredAuthSubErrorMessage = [\"message_only\", \"additional_action\", \"basic_action\", \"user_password_expired\", \"consent_required\"];\n/**\n * Interaction required errors defined by the SDK\n */\nconst InteractionRequiredAuthErrorMessage = {\n  noTokensFoundError: {\n    code: \"no_tokens_found\",\n    desc: \"No refresh token found in the cache. Please sign-in.\"\n  },\n  native_account_unavailable: {\n    code: \"native_account_unavailable\",\n    desc: \"The requested account is not available in the native broker. It may have been deleted or logged out. Please sign-in again using an interactive API.\"\n  }\n};\n/**\n * Error thrown when user interaction is required.\n */\nclass InteractionRequiredAuthError extends AuthError {\n  constructor(errorCode, errorMessage, subError, timestamp, traceId, correlationId, claims) {\n    super(errorCode, errorMessage, subError);\n    Object.setPrototypeOf(this, InteractionRequiredAuthError.prototype);\n    this.timestamp = timestamp || Constants.EMPTY_STRING;\n    this.traceId = traceId || Constants.EMPTY_STRING;\n    this.correlationId = correlationId || Constants.EMPTY_STRING;\n    this.claims = claims || Constants.EMPTY_STRING;\n    this.name = \"InteractionRequiredAuthError\";\n  }\n  /**\n   * Helper function used to determine if an error thrown by the server requires interaction to resolve\n   * @param errorCode\n   * @param errorString\n   * @param subError\n   */\n  static isInteractionRequiredError(errorCode, errorString, subError) {\n    const isInteractionRequiredErrorCode = !!errorCode && InteractionRequiredServerErrorMessage.indexOf(errorCode) > -1;\n    const isInteractionRequiredSubError = !!subError && InteractionRequiredAuthSubErrorMessage.indexOf(subError) > -1;\n    const isInteractionRequiredErrorDesc = !!errorString && InteractionRequiredServerErrorMessage.some(irErrorCode => {\n      return errorString.indexOf(irErrorCode) > -1;\n    });\n    return isInteractionRequiredErrorCode || isInteractionRequiredErrorDesc || isInteractionRequiredSubError;\n  }\n  /**\n   * Creates an error thrown when the authorization code required for a token request is null or empty.\n   */\n  static createNoTokensFoundError() {\n    return new InteractionRequiredAuthError(InteractionRequiredAuthErrorMessage.noTokensFoundError.code, InteractionRequiredAuthErrorMessage.noTokensFoundError.desc);\n  }\n  /**\n   * Creates an error thrown when the native broker returns ACCOUNT_UNAVAILABLE status, indicating that the account was removed and interactive sign-in is required\n   * @returns\n   */\n  static createNativeAccountUnavailableError() {\n    return new InteractionRequiredAuthError(InteractionRequiredAuthErrorMessage.native_account_unavailable.code, InteractionRequiredAuthErrorMessage.native_account_unavailable.desc);\n  }\n}\nexport { InteractionRequiredAuthError, InteractionRequiredAuthErrorMessage, InteractionRequiredAuthSubErrorMessage, InteractionRequiredServerErrorMessage };","map":{"version":3,"names":["InteractionRequiredServerErrorMessage","InteractionRequiredAuthSubErrorMessage","InteractionRequiredAuthErrorMessage","noTokensFoundError","code","desc","native_account_unavailable","InteractionRequiredAuthError","AuthError","constructor","errorCode","errorMessage","subError","timestamp","traceId","correlationId","claims","Object","setPrototypeOf","prototype","Constants","EMPTY_STRING","name","isInteractionRequiredError","errorString","isInteractionRequiredErrorCode","indexOf","isInteractionRequiredSubError","isInteractionRequiredErrorDesc","some","irErrorCode","createNoTokensFoundError","createNativeAccountUnavailableError"],"sources":["../../src/error/InteractionRequiredAuthError.ts"],"sourcesContent":[null],"mappings":";;;;;;AAAA;;;AAGG;AAKH;;AAEG;AACU,MAAAA,qCAAqC,GAAG,CACjD,sBAAsB,EACtB,kBAAkB,EAClB,gBAAgB,C;AAGP,MAAAC,sCAAsC,GAAG,CAClD,cAAc,EACd,mBAAmB,EACnB,cAAc,EACd,uBAAuB,EACvB,kBAAkB,C;AAGtB;;AAEG;AACU,MAAAC,mCAAmC,GAAG;EAC/CC,kBAAkB,EAAE;IAChBC,IAAI,EAAE,iBAAiB;IACvBC,IAAI,EAAE;EACT;EACDC,0BAA0B,EAAE;IACxBF,IAAI,EAAE,4BAA4B;IAClCC,IAAI,EAAE;EACT;;AAGL;;AAEG;AACG,MAAOE,4BAA6B,SAAQC,SAAS;EAsBvDC,YACIC,SAAkB,EAClBC,YAAqB,EACrBC,QAAiB,EACjBC,SAAkB,EAClBC,OAAgB,EAChBC,aAAsB,EACtBC,MAAe;IAEf,KAAK,CAACN,SAAS,EAAEC,YAAY,EAAEC,QAAQ,CAAC;IACxCK,MAAM,CAACC,cAAc,CAAC,IAAI,EAAEX,4BAA4B,CAACY,SAAS,CAAC;IAEnE,IAAI,CAACN,SAAS,GAAGA,SAAS,IAAIO,SAAS,CAACC,YAAY;IACpD,IAAI,CAACP,OAAO,GAAGA,OAAO,IAAIM,SAAS,CAACC,YAAY;IAChD,IAAI,CAACN,aAAa,GAAGA,aAAa,IAAIK,SAAS,CAACC,YAAY;IAC5D,IAAI,CAACL,MAAM,GAAGA,MAAM,IAAII,SAAS,CAACC,YAAY;IAC9C,IAAI,CAACC,IAAI,GAAG,8BAA8B;;EAG9C;;;;;AAKG;EACH,OAAOC,0BAA0BA,CAC7Bb,SAAkB,EAClBc,WAAoB,EACpBZ,QAAiB;IAEjB,MAAMa,8BAA8B,GAChC,CAAC,CAACf,SAAS,IACXV,qCAAqC,CAAC0B,OAAO,CAAChB,SAAS,CAAC,GAAG,CAAC,CAAC;IACjE,MAAMiB,6BAA6B,GAC/B,CAAC,CAACf,QAAQ,IACVX,sCAAsC,CAACyB,OAAO,CAACd,QAAQ,CAAC,GAAG,CAAC,CAAC;IACjE,MAAMgB,8BAA8B,GAChC,CAAC,CAACJ,WAAW,IACbxB,qCAAqC,CAAC6B,IAAI,CAAEC,WAAW,IAAI;MACvD,OAAON,WAAW,CAACE,OAAO,CAACI,WAAW,CAAC,GAAG,CAAC,CAAC;IAChD,CAAC,CAAC;IAEN,OACIL,8BAA8B,IAC9BG,8BAA8B,IAC9BD,6BAA6B;;EAIrC;;AAEG;EACH,OAAOI,wBAAwBA,CAAA;IAC3B,OAAO,IAAIxB,4BAA4B,CACnCL,mCAAmC,CAACC,kBAAkB,CAACC,IAAI,EAC3DF,mCAAmC,CAACC,kBAAkB,CAACE,IAAI,CAC9D;;EAGL;;;AAGG;EACH,OAAO2B,mCAAmCA,CAAA;IACtC,OAAO,IAAIzB,4BAA4B,CACnCL,mCAAmC,CAACI,0BAA0B,CAACF,IAAI,EACnEF,mCAAmC,CAACI,0BAA0B,CAACD,IAAI,CACtE;;AAER"},"metadata":{},"sourceType":"module","externalDependencies":[]}